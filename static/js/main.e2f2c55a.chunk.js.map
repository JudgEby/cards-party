{"version":3,"sources":["n2-features/f8-cards/Cards.module.css","n2-features/f7-packs/Packs.module.css","n1-main/m1-ui/header/Header.module.css","n2-features/f1-auth/Auth.module.css","n2-features/f3-profile/Profile.module.css","n2-features/f2-registration/Registration.module.css","n2-features/f5-newPassword/NewPassword.module.css","n2-features/f8-cards/CardsLearning/CardsLearningItem/CardsLearningItem.module.css","n2-features/f4-passwordRecovery/PasswordRecovery.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/Modal/Modal.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/SuperRadio/SuperRadio.module.css","n1-main/m1-ui/common/SuperSelect/SuperSelect.module.css","n1-main/m1-ui/common/SuperPaginator/SuperPaginator.module.css","n2-features/f7-packs/Slider/Slider.module.css","n1-main/m1-ui/App/App.module.css","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.module.css","n1-main/m1-ui/common/SuperRange/SuperRange.module.css","n1-main/m1-ui/common/Loader/Loader.module.css","n2-features/f8-cards/CardsLearning/CardsLearningContainer.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/SuperRadio/SuperRadio.tsx","n1-main/m1-ui/common/SuperRange/SuperRange.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n2-features/f0-test/Test.tsx","n1-main/m3-dal/endpoints.ts","n1-main/m3-dal/api.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/auth-reducer.ts","Media/menu/menu.png","n1-main/m1-ui/header/Header.tsx","n2-features/f1-auth/Auth.tsx","n1-main/m2-bll/registration-reducer.ts","n1-main/m1-ui/common/Loader/Loader.tsx","n2-features/f2-registration/Registration.tsx","Media/avatar/icon-avatar.jpg","Media/edit-icon.svg","n2-features/f3-profile/Profile.tsx","n2-features/f6-404/Error404.tsx","n1-main/m2-bll/passwordRecovery-reducer.ts","n2-features/f4-passwordRecovery/PasswordRecovery.tsx","n1-main/m2-bll/newPassword-reducer.ts","n2-features/f5-newPassword/NewPassword.tsx","n1-main/m2-bll/packs-reducer.ts","n1-main/m1-ui/common/Modal/Modal.tsx","n2-features/f7-packs/PacksListItem/PacksListItem.tsx","n1-main/m1-ui/common/SuperPaginator/SuperPaginator.tsx","n2-features/f7-packs/PacksPaginator/PacksPaginator.tsx","n1-main/m1-ui/common/Search/Search.tsx","n2-features/f7-packs/Slider/Slider.tsx","n2-features/f7-packs/Packs.tsx","n1-main/m2-bll/—Åards-reducer.ts","n2-features/f8-cards/CardsListItem/CardsListItem.tsx","n2-features/f8-cards/Cards.tsx","n1-main/m2-bll/app-reducer.ts","n2-features/f8-cards/CardsLearning/CardsLearningItem/CardsLearningItem.tsx","n2-features/f8-cards/CardsLearning/CardsLearningContainer.tsx","n1-main/m1-ui/App/App.tsx","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","SuperButton","canceling","className","restProps","finalClassName","s","common","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","superInput","errorInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","styles","superSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","target","mappedOptions","map","o","i","style","label","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","option","select","Test","placeholder","authServerEndpoints","cardsServerEndpoints","instance","axios","create","baseURL","withCredentials","authAPI","post","loginData","delete","email","password","from","message","resetPasswordToken","put","avatar","cardsPacksAPI","params","get","privatePack","deckCover","cardsPack","private","packId","packName","_id","cardsPack_id","question","answer","card","cardId","card_id","grade","initialState","publicCardPacksCount","verified","getDataForProfileFromResponseObj","res","setProfile","data","payload","setProfileData","dispatch","isAuthorized","isLoading","setIsAuthorized","setIsLoading","Header","useDispatch","useSelector","state","auth","header","to","link","activeClassName","active","onClick","a","src","menu","block","alt","Auth","setEmail","setPassword","rememberMe","setRememberMe","onSubmit","then","catch","response","err","LoginTC","preventDefault","authPageContainer","login","emailPasswordLoginContainer","recoveryContainer","recovery","loginButtonContainer","loginButton","disabled","signUpContainer","account","SignUpContainer","SignUp","isRegistered","setError","Loader","ldsEllipsis","Registration","setLogin","checkPassword","setCheckPassword","registration","registerTC","registrationContainer","inputFields","button","btnCancelRegister","Profile","console","log","profile","newAvatarInputValue","setNewAvatarInputValue","editAvatarMode","setEditAvatarMode","newNameInputValue","setNewNameInputValue","editNameMode","setEditNameMode","undefined","nameError","setNameError","editAvatar","editName","sendNewAvatar","url","updatedUser","sendNewName","validation","length","nameValidation","updateUserName","editAvatarBlock","buttons","editNameBlock","profileContainer","background","defaultAvatar","avatarChangeIconWrapper","editIcon","avatarChangeIcon","userNameWrapper","Error404","recoveryError","recoverySendSuccess","setRecoveryError","setRecoverySendSuccess","sendPasswordRecovery","PasswordRecovery","passwordRecovery","inputValue","setInputValue","passwordRecoveryContainer","inputField","positionBtn","footerBtn","newPasswordSendingSuccess","newPasswordSendingError","setNewPasswordSendingSuccess","setNewPasswordSendingError","NewPassword","newPassword","newPasswordValue","setNewPasswordValue","confirmPasswordValue","setConfirmPasswordValue","isPasswordsMatch","setIsPasswordsMatch","isPasswordValid","setIsPasswordValid","token","useParams","onChangeInputHandler","newPasswordContainer","tokenNotFoundBlock","enterNewPasswordBlock","confirmNewPasswordBlock","confirmPassword","InitialState","packs","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","sortPacks","setGetPacksParams","getPacksTC","user_id","getState","resultParams","cardPacks","addNewPack","userID","changeGetPackParams","Modal","props","Container","OnBackClick","main","PacksListItem","pack","onUpdatePackNameHandler","deletePackHandler","updateMyPackNameMode","setUpdateMyPackNameMode","updateMyPackNameInputValue","setUpdateMyPackNameInputValue","onToggleUpdateMyPackNameMode","prevValue","Pack","nameColumn","cardsCountColumn","cardsCount","updatedColumn","Date","updated","toLocaleString","urlColumn","actionsWithPackBlock","addPackModalInput","updatePackNameModalButtonsBlock","SuperPaginator","React","memo","pageSize","totalItemsCount","currentPage","onPageClick","correctRightPortionPageNumber","pagesArray","pagesCount","Math","ceil","push","pageNumber","selectedPage","PacksPaginator","Search","handler","setValue","useEffect","timerId","setTimeout","clearTimeout","Slider","min","max","leftValue","setLeftValue","rightValue","setRightValue","leftWidth","rightWidth","leftRange","width","rightRange","Packs","addNewPackNameInputValue","setAddNewPackNameInputValue","showOnlyMyPack","setShowOnlyMyPack","showModal","setShowModal","CardsPacks","deletePack","updatePackName","sortColumn","sortedSign","slice","CardsPacksContainer","addingNewPackBlock","PacksParams","tableHeader","cardsColumn","PacksContainer","userId","cards","packUserId","cardAnswer","cardQuestion","sortCards","setGetCardsParams","getCardsTC","setCards","clearCardsData","changeGetCardsParams","CardsListItem","onUpdateCartHandler","Card","actionsWithCard","paramsForGettingCards","Cards","cardQuestionTextValue","setCardQuestionTextValue","cardQuestionValidateError","setCardQuestionValidateError","cardAnswerTextValue","setCardAnswerTextValue","cardAnswerValidateError","setCardAnswerValidateError","addNewCardMode","setAddNewCardMode","updateCardMode","setUpdateCardMode","updatingCardId","setUpdatingCardId","cardsPackID","clearNewCardInputsText","CardsContainer","addNewCardBlock","addNewCardInput","errorSpan","updateCard","addNewCardMainButton","CardsParams","status","isInitialized","setAppStatusAC","CardsLearningItem","grades","getNextCard","gradeNumber","setGradeNumber","checkedGradeValue","setCheckedGradeValue","showAnswer","setShowAnswer","classNameIfHidden","hidden","container","questionBlock","prev","answerBlock","radiosBlock","chosenGrade","indexOf","CardsLearningContainer","currentCardQuestion","setCurrentCardQuestion","currentCardAnswer","setCurrentCardAnswer","currentCardId","setCurrentCardId","redirectToPacks","setRedirectToPacks","idsByGradeArr","reduce","acc","arr","Array","round","fill","randomCardId","floor","random","randomCard","find","gradeNamber","App","app","loader","position","top","textAlign","exact","path","render","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2f2c55a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardsParams\":\"Cards_CardsParams__3cDv4\",\"CardsContainer\":\"Cards_CardsContainer__3qjzo\",\"Card\":\"Cards_Card__1ZV4B\",\"addNewCardBlock\":\"Cards_addNewCardBlock__3aQQx\",\"actionsWithCard\":\"Cards_actionsWithCard__3I_SO\",\"addNewCardInput\":\"Cards_addNewCardInput__38etV\",\"addNewCardMainButton\":\"Cards_addNewCardMainButton__7AkSD\",\"errorSpan\":\"Cards_errorSpan__1v-59\",\"question\":\"Cards_question__3CD2J\",\"answer\":\"Cards_answer__sD5kc\",\"grade\":\"Cards_grade__38Ew6\",\"updated\":\"Cards_updated__3Ixp9\",\"url\":\"Cards_url__Ve4NM\",\"tableHeader\":\"Cards_tableHeader__SH7r4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PacksParams\":\"Packs_PacksParams__3eMK4\",\"PacksContainer\":\"Packs_PacksContainer__28UQS\",\"Pack\":\"Packs_Pack__3pheK\",\"addingNewPackBlock\":\"Packs_addingNewPackBlock__iWfsx\",\"actionsWithPackBlock\":\"Packs_actionsWithPackBlock__1KfYY\",\"nameColumn\":\"Packs_nameColumn__3GwDI\",\"cardsCountColumn\":\"Packs_cardsCountColumn__2TK3J\",\"updatedColumn\":\"Packs_updatedColumn__2hlAL\",\"urlColumn\":\"Packs_urlColumn__19sP8\",\"cardsColumn\":\"Packs_cardsColumn__2xaXe\",\"tableHeader\":\"Packs_tableHeader__1224B\",\"addPackModalInput\":\"Packs_addPackModalInput__3qvpT\",\"updatePackNameModalButtonsBlock\":\"Packs_updatePackNameModalButtonsBlock__1cTiu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__PIB1Q\",\"block\":\"Header_block__3XSDT\",\"link\":\"Header_link__HvP0l\",\"active\":\"Header_active__3jTvK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Auth_authPageContainer__JMl6s\",\"emailPasswordLoginContainer\":\"Auth_emailPasswordLoginContainer__3HfAd\",\"label\":\"Auth_label__1nNWk\",\"checkbox\":\"Auth_checkbox__su0et\",\"recoveryContainer\":\"Auth_recoveryContainer__3OVyI\",\"rememberMe\":\"Auth_rememberMe__3w_MW\",\"loginButtonContainer\":\"Auth_loginButtonContainer__2JHPn\",\"loginButton\":\"Auth_loginButton__ME2LV\",\"account\":\"Auth_account__35u_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileContainer\":\"Profile_profileContainer__oV-hr\",\"avatar\":\"Profile_avatar__2gmDj\",\"avatarChangeIconWrapper\":\"Profile_avatarChangeIconWrapper__3rj0e\",\"avatarChangeIcon\":\"Profile_avatarChangeIcon__2gcqb\",\"userNameWrapper\":\"Profile_userNameWrapper__l-hPv\",\"name\":\"Profile_name__3mDu2\",\"buttons\":\"Profile_buttons__2IJGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__2kTeu\",\"inputFields\":\"Registration_inputFields__UMhdC\",\"button\":\"Registration_button__1tQUU\",\"btnCancelRegister\":\"Registration_btnCancelRegister__31SLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordContainer\":\"NewPassword_newPasswordContainer__ENMTo\",\"tokenNotFoundBlock\":\"NewPassword_tokenNotFoundBlock__3KA71\",\"enterNewPasswordBlock\":\"NewPassword_enterNewPasswordBlock__2Lznj\",\"confirmNewPasswordBlock\":\"NewPassword_confirmNewPasswordBlock__smn3C\",\"error\":\"NewPassword_error__3sb4O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsLearningItem_container__1VuNV\",\"radiosBlock\":\"CardsLearningItem_radiosBlock__3q8wR\",\"questionBlock\":\"CardsLearningItem_questionBlock__RckOI\",\"answerBlock\":\"CardsLearningItem_answerBlock__3-Kxw\",\"hidden\":\"CardsLearningItem_hidden__3Mh70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecoveryContainer\":\"PasswordRecovery_passwordRecoveryContainer__1Gjmv\",\"inputField\":\"PasswordRecovery_inputField__Xkeb2\",\"positionBtn\":\"PasswordRecovery_positionBtn__haYvE\",\"footerBtn\":\"PasswordRecovery_footerBtn__Bszkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"SuperButton_common__1PC4H\",\"default\":\"SuperButton_default__3VOuJ\",\"canceling\":\"SuperButton_canceling__14Op4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1EjAt\",\"errorInput\":\"SuperInputText_errorInput__3PmNA\",\"error\":\"SuperInputText_error__2wF7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Modal_Container__1F1Dt\",\"background\":\"Modal_background__2HtTV\",\"main\":\"Modal_main__4NYiw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3E8nS\",\"spanClassName\":\"SuperCheckbox_spanClassName__30TFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__P5Y57\",\"label\":\"SuperRadio_label__2NlIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1VUYg\",\"option\":\"SuperSelect_option__SSz08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"SuperPaginator_pageNumber__2YFml\",\"selectedPage\":\"SuperPaginator_selectedPage__2pyes\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"leftRange\":\"Slider_leftRange__jQ9Nk\",\"rightRange\":\"Slider_rightRange__2Ucms\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2rlk7\",\"container\":\"App_container__WwTbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__1kEcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2sHEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"Loader_ldsEllipsis__3Hzfn\",\"ldsEllipsis1\":\"Loader_ldsEllipsis1__7UqJi\",\"ldsEllipsis2\":\"Loader_ldsEllipsis2__1bWJz\",\"ldsEllipsis3\":\"Loader_ldsEllipsis3__1dsx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CardsLearningContainer_container__3CG6P\"};","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–π –∫–Ω–æ–ø–∫–∏, children –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Ç–∞–º —É–∂–µ –æ–ø–∏—Å–∞–Ω\r\ntype DefaultButtonPropsType = DetailedHTMLProps<\r\n\tButtonHTMLAttributes<HTMLButtonElement>,\r\n\tHTMLButtonElement\r\n>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n\tcanceling?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = ({\r\n\tcanceling,\r\n\tclassName,\r\n\t...restProps // –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—ä–µ–∫—Ç restProps, —Ç–∞–º –∂–µ –±—É–¥–µ—Ç children\r\n}) => {\r\n\tconst finalClassName = `${s.common} ${\r\n\t\tcanceling ? s.canceling : s.default\r\n\t} ${className}`\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={finalClassName}\r\n\t\t\t{...restProps} // –æ—Ç–¥–∞—ë–º –∫–Ω–æ–ø–∫–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (children —Ç–∞–º –≤–Ω—É—Ç—Ä–∏)\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SuperButton\r\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // –¥–æ—Å—Ç–∞—ë–º –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —á—Ç–æ–± –Ω–µ–ª—å–∑—è –±—ã–ª–æ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∏–ø –∏–Ω–ø—É—Ç–∞\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // –≤ —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–ø–∞–¥—ë—Ç —Ç–µ–∫—Å—Ç, —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∑–∞—Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω –≤ React.FC\n\n  ...restProps // –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—ä–µ–∫—Ç restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n  return (\n    <label>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // –æ—Ç–¥–∞—ë–º –∏–Ω–ø—É—Ç—É –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (checked –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–º –≤–Ω—É—Ç—Ä–∏)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // –±–ª–∞–≥–æ–¥–∞—Ä—è label –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ —Å–ø–∞–Ω –ø–µ—Ä–µ–¥–∞—Å—Ç—Å—è –≤ –∏–Ω–ø—É—Ç\n  );\n};\n\nexport default SuperCheckbox;\n","import React, {\r\n\tChangeEvent,\r\n\tDetailedHTMLProps,\r\n\tInputHTMLAttributes,\r\n\tKeyboardEvent,\r\n} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\r\ntype DefaultInputPropsType = DetailedHTMLProps<\r\n\tInputHTMLAttributes<HTMLInputElement>,\r\n\tHTMLInputElement\r\n>\r\n\r\n// –∑–¥–µ—Å—å –º—ã –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ —É –Ω–∞—à–µ–≥–æ –∏–Ω–ø—É—Ç–∞ –±—É–¥—É—Ç —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–æ–ø—Å—ã –∫–∞–∫ —É –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\r\n// (—á—Ç–æ–± –Ω–µ –ø–∏—Å–∞—Ç—å value: string, onChange: ...; –æ–Ω–∏ —É–∂–µ –≤—Å–µ –æ–ø–∏—Å–∞–Ω—ã –≤ DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & {\r\n\t// –∏ + –µ—â—ë –ø—Ä–æ–ø—Å—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –∏–Ω–ø—É—Ç–µ\r\n\tonChangeText?: (value: string) => void\r\n\tonEnter?: () => void\r\n\terror?: string\r\n\tspanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\r\n\ttype, // –¥–æ—Å—Ç–∞—ë–º –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —á—Ç–æ–± –Ω–µ–ª—å–∑—è –±—ã–ª–æ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∏–ø –∏–Ω–ø—É—Ç–∞\r\n\tonChange,\r\n\tonChangeText,\r\n\tonKeyPress,\r\n\tonEnter,\r\n\terror,\r\n\tclassName,\r\n\tspanClassName,\r\n\r\n\t...restProps // –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—ä–µ–∫—Ç restProps\r\n}) => {\r\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tonChange && // –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–ø—Å onChange\r\n\t\t\tonChange(e) // —Ç–æ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–º—É –µ (–ø–æ—Å–∫–æ–ª—å–∫—É onChange –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω)\r\n\r\n\t\tonChangeText && onChangeText(e.currentTarget.value)\r\n\t}\r\n\tconst onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tonKeyPress && onKeyPress(e)\r\n\r\n\t\tonEnter && // –µ—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–ø—Å onEnter\r\n\t\t\te.key === 'Enter' && // –∏ –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ Enter\r\n\t\t\tonEnter() // —Ç–æ –≤—ã–∑–≤–∞—Ç—å –µ–≥–æ\r\n\t}\r\n\r\n\tconst finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n\tconst finalInputClassName = `${s.superInput} ${error && s.errorInput} ${\r\n\t\tclassName ? className : ''\r\n\t}` // need to fix with (?:) and s.superInput\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\ttype={'text'}\r\n\t\t\t\tonChange={onChangeCallback}\r\n\t\t\t\tonKeyPress={onKeyPressCallback}\r\n\t\t\t\tclassName={finalInputClassName}\r\n\t\t\t\t{...restProps} // –æ—Ç–¥–∞—ë–º –∏–Ω–ø—É—Ç—É –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (value –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–º –≤–Ω—É—Ç—Ä–∏)\r\n\t\t\t/>\r\n\t\t\t{error && <span className={finalSpanClassName}>{error}</span>}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {\n\tDetailedHTMLProps,\n\tInputHTMLAttributes,\n\tHTMLAttributes,\n\tuseState,\n} from 'react'\nimport SuperInputText from '../SuperInputText/SuperInputText'\n\nimport styles from './SuperEditableSpan.module.css'\n\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\ntype DefaultInputPropsType = DetailedHTMLProps<\n\tInputHTMLAttributes<HTMLInputElement>,\n\tHTMLInputElement\n>\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ —Å–ø–∞–Ω–∞\ntype DefaultSpanPropsType = DetailedHTMLProps<\n\tHTMLAttributes<HTMLSpanElement>,\n\tHTMLSpanElement\n>\n\n// –∑–¥–µ—Å—å –º—ã –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ —É –Ω–∞—à–µ–≥–æ –∏–Ω–ø—É—Ç–∞ –±—É–¥—É—Ç —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–æ–ø—Å—ã –∫–∞–∫ —É –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\n// (—á—Ç–æ–± –Ω–µ –ø–∏—Å–∞—Ç—å value: string, onChange: ...; –æ–Ω–∏ —É–∂–µ –≤—Å–µ –æ–ø–∏—Å–∞–Ω—ã –≤ DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n\t// –∏ + –µ—â—ë –ø—Ä–æ–ø—Å—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –∏–Ω–ø—É—Ç–µ\n\tonChangeText?: (value: string) => void\n\tonEnter?: () => void\n\terror?: string\n\tspanClassName?: string\n\n\tspanProps?: DefaultSpanPropsType // –ø—Ä–æ–ø—Å—ã –¥–ª—è —Å–ø–∞–Ω–∞\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n\tautoFocus, // –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –ø—Ä–æ–ø—Å–∞\n\tonBlur,\n\tonEnter,\n\tspanProps,\n\n\t...restProps // –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—ä–µ–∫—Ç restProps\n}) => {\n\tconst [editMode, setEditMode] = useState<boolean>(false)\n\tconst { children, onDoubleClick, className, ...restSpanProps } =\n\t\tspanProps || {}\n\n\tconst onEnterCallback = () => {\n\t\t// setEditMode() // –≤—ã–∫–ª—é—á–∏—Ç—å editMode –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter\n\t\tsetEditMode(false)\n\t\tonEnter && onEnter()\n\t}\n\tconst onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\t// setEditMode() // –≤—ã–∫–ª—é—á–∏—Ç—å editMode –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –∏–Ω–ø—É—Ç–∞\n\t\tsetEditMode(false)\n\t\tonBlur && onBlur(e)\n\t}\n\tconst onDoubleClickCallBack = (\n\t\te: React.MouseEvent<HTMLSpanElement, MouseEvent>\n\t) => {\n\t\t// setEditMode() // –≤–∫–ª—é—á–∏—Ç—å editMode –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º –∫–ª–∏–∫–µ\n\t\tsetEditMode(true)\n\t\tonDoubleClick && onDoubleClick(e)\n\t}\n\n\tconst spanClassName = `${styles.superSpan} ${className}`\n\n\treturn (\n\t\t<>\n\t\t\t{editMode ? (\n\t\t\t\t<SuperInputText\n\t\t\t\t\tautoFocus // –ø—Ä–æ–ø—Å—É —Å –±—É–ª–µ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å true\n\t\t\t\t\tonBlur={onBlurCallback}\n\t\t\t\t\tonEnter={onEnterCallback}\n\t\t\t\t\t{...restProps} // –æ—Ç–¥–∞—ë–º –∏–Ω–ø—É—Ç—É –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (value –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–º –≤–Ω—É—Ç—Ä–∏)\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<span\n\t\t\t\t\tonDoubleClick={onDoubleClickCallBack}\n\t\t\t\t\tclassName={spanClassName}\n\t\t\t\t\t{...restSpanProps}\n\t\t\t\t>\n\t\t\t\t\t{/*–µ—Å–ª–∏ –Ω–µ—Ç –∑–∞—Ö–∞—Ä–¥–∫–æ–¥–∂–µ–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Å–ø–∞–Ω–∞, —Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω–ø—É—Ç–∞*/}\n\t\t\t\t\t{children || restProps.value}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default SuperEditableSpan\n","import React, {\n  ChangeEvent,\n  InputHTMLAttributes,\n  DetailedHTMLProps,\n} from 'react'\nimport style from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <label key={name + '-' + i} className={style.label}>\n          <input\n            type={'radio'}\n            className={style.radio}\n            checked={o === value}\n            value={o}\n            onChange={(e) => onChangeCallback(e)}\n            name={name}\n          />\n          {o}\n        </label>\n      ))\n    : []\n\n  return <>{mappedOptions}</>\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// —Ç–∏–ø –ø—Ä–æ–ø—Å–æ–≤ –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// –∑–¥–µ—Å—å –º—ã –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ —É –Ω–∞—à–µ–≥–æ –∏–Ω–ø—É—Ç–∞ –±—É–¥—É—Ç —Ç–∞–∫–∏–µ –∂–µ –ø—Ä–æ–ø—Å—ã –∫–∞–∫ —É –æ–±—ã—á–Ω–æ–≥–æ –∏–Ω–ø—É—Ç–∞\n// (—á—Ç–æ–± –Ω–µ –ø–∏—Å–∞—Ç—å value: string, onChange: ...; –æ–Ω–∏ —É–∂–µ –≤—Å–µ –æ–ø–∏—Å–∞–Ω—ã –≤ DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // –∏ + –µ—â—ë –ø—Ä–æ–ø—Å—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º –∏–Ω–ø—É—Ç–µ\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // –¥–æ—Å—Ç–∞—ë–º –∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —á—Ç–æ–± –Ω–µ–ª—å–∑—è –±—ã–ª–æ –∑–∞–¥–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∏–ø –∏–Ω–ø—É—Ç–∞\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –ø–æ–ø–∞–¥—É—Ç –≤ –æ–±—ä–µ–∫—Ç restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // –æ—Ç–¥–∞—ë–º –∏–Ω–ø—É—Ç—É –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–ø—Å—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å (value –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–º –≤–Ω—É—Ç—Ä–∏)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from 'react'\n\nimport style from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <option key={`${o}-${i}`} value={o} className={style.option}>\n          {o}\n        </option>\n      ))\n    : [] // map options with key\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  return (\n    <select className={style.select} onChange={onChangeCallback} {...restProps}>\n      {mappedOptions}\n    </select>\n  )\n}\n\nexport default SuperSelect\n","import React from 'react'\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\nimport SuperCheckbox from '../../n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox'\nimport SuperEditableSpan from '../../n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan'\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\nimport SuperRadio from '../../n1-main/m1-ui/common/SuperRadio/SuperRadio'\nimport SuperRange from '../../n1-main/m1-ui/common/SuperRange/SuperRange'\nimport SuperSelect from '../../n1-main/m1-ui/common/SuperSelect/SuperSelect'\n\nconst Test = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<SuperButton>Ya est SuperButton</SuperButton>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperCheckbox>Ya est SuperCheckbox</SuperCheckbox>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperEditableSpan value={'value'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperInputText placeholder={'Ya est SuperInputText'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRadio\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRange value={10} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperSelect\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Test\n","export const authServerEndpoints = {\r\n\tlogin: 'auth/login',\r\n\tme: 'auth/me',\r\n\tregister: 'auth/register',\r\n\tsetNewPassword: 'auth/set-new-password',\r\n\tforgot: 'auth/forgot',\r\n}\r\nexport const cardsServerEndpoints = {\r\n\tpack: 'cards/pack',\r\n\tcard: 'cards/card',\r\n\tgrade: 'cards/grade',\r\n}\r\n","import axios from 'axios'\nimport { loginDataType } from '../m2-bll/auth-reducer'\nimport { authServerEndpoints, cardsServerEndpoints } from './endpoints'\n\nconst instance2 = axios.create({\n\tbaseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true,\n})\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\twithCredentials: true,\n})\n\nconst linkInRecoverEmailToLocal = 'http://localhost:3000/#/password/new/$token$'\nconst linkInRecoverEmailToGithubPages =\n\t'https://judgeby.github.io/cards-party/#/password/new/$token$'\n\nexport const authAPI = {\n\tgetMe() {\n\t\treturn instance.post(authServerEndpoints.me, {})\n\t},\n\tlogin(loginData: loginDataType) {\n\t\treturn instance.post(authServerEndpoints.login, loginData)\n\t},\n\tlogout() {\n\t\treturn instance.delete(authServerEndpoints.me)\n\t},\n\tregister(email: string, password: string) {\n\t\treturn instance.post(authServerEndpoints.register, { email, password })\n\t},\n\t//–ª–æ–∫–∞–ª—å–Ω—ã–π –±—ç–∫ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å - –¥–µ–ª–∞—Ç—å –Ω–∞ —Ö–µ—Ä–æ–∫—É\n\tsendPasswordRecoveryRequest(email: string) {\n\t\treturn axios.post(\n\t\t\t'https://neko-back.herokuapp.com/2.0/auth/forgot',\n\t\t\t{\n\t\t\t\temail,\n\t\t\t\tfrom: 'Best of the best',\n\t\t\t\tmessage: `<div style='background-color: lime; padding: 15px'>password recovery link: <a href=${linkInRecoverEmailToGithubPages}>link</a></div>`,\n\t\t\t},\n\t\t\t{ withCredentials: true }\n\t\t)\n\t},\n\tsendNewPassword(password: string, resetPasswordToken: string) {\n\t\treturn instance.post(authServerEndpoints.setNewPassword, {\n\t\t\tpassword,\n\t\t\tresetPasswordToken,\n\t\t})\n\t},\n\tupdateUserName(name: string) {\n\t\treturn instance.put(authServerEndpoints.me, { name })\n\t},\n\tupdateUserAvatarUrl(avatar: string) {\n\t\treturn instance.put(authServerEndpoints.me, { avatar })\n\t},\n}\n\nexport const cardsPacksAPI = {\n\tgetPacks(params: any) {\n\t\treturn instance.get(cardsServerEndpoints.pack, { params: params })\n\t},\n\n\taddPack(name: string, privatePack: boolean = false, deckCover: string = '') {\n\t\treturn instance.post(cardsServerEndpoints.pack, {\n\t\t\tcardsPack: {\n\t\t\t\tname,\n\t\t\t\tprivate: privatePack,\n\t\t\t\tdeckCover,\n\t\t\t},\n\t\t})\n\t},\n\tdeletePack(packId: string) {\n\t\treturn instance.delete(`${cardsServerEndpoints.pack}?id=${packId}`)\n\t},\n\tupdatePackName(packId: string, packName: string) {\n\t\treturn instance.put(cardsServerEndpoints.pack, {\n\t\t\tcardsPack: { _id: packId, name: packName },\n\t\t})\n\t},\n\tgetCards(params: any) {\n\t\treturn instance.get(cardsServerEndpoints.card, { params: params })\n\t},\n\taddCard(cardsPack_id: string, question: string, answer: string) {\n\t\treturn instance.post(cardsServerEndpoints.card, {\n\t\t\tcard: {\n\t\t\t\tcardsPack_id,\n\t\t\t\tquestion,\n\t\t\t\tanswer,\n\t\t\t},\n\t\t})\n\t},\n\tdeleteCard(cardId: string) {\n\t\treturn instance.delete(`${cardsServerEndpoints.card}?id=${cardId}`)\n\t},\n\tupdateCard(_id: string, question: string, answer: string) {\n\t\treturn instance.put(cardsServerEndpoints.card, {\n\t\t\tcard: {\n\t\t\t\t_id,\n\t\t\t\tquestion,\n\t\t\t\tanswer,\n\t\t\t},\n\t\t})\n\t},\n\tgradeCard(card_id: string, grade: number) {\n\t\treturn instance.put(cardsServerEndpoints.grade, { card_id, grade })\n\t},\n}\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\n\r\nconst initialState = {\r\n\t_id: null as null | string,\r\n\tname: null as null | string,\r\n\temail: null as null | string,\r\n\tavatar: null as null | string,\r\n\tpublicCardPacksCount: null as null | number,\r\n\tverified: false,\r\n}\r\n\r\nexport const profileReducer = (\r\n\tstate: ProfileStateType = initialState,\r\n\taction: ProfileActionsType\r\n): ProfileStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'PROFILE/SET-PROFILE-DATA': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n//utils\r\nconst getDataForProfileFromResponseObj = (res: any): ProfileStateType => {\r\n\tconst { _id, name, email, avatar, publicCardPacksCount, verified } = res\r\n\treturn { _id, name, email, avatar, publicCardPacksCount, verified }\r\n}\r\n\r\n// actions\r\nexport const setProfile = (data: ProfileStateType) =>\r\n\t({ type: 'PROFILE/SET-PROFILE-DATA', payload: { ...data } } as const)\r\n// thunks\r\nexport const setProfileData =\r\n\t(data: ProfileStateType): AppThunk =>\r\n\tdispatch => {\r\n\t\tdispatch(setProfile(data))\r\n\t}\r\nexport const updateUserName =\r\n\t(name: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tconst res = await authAPI.updateUserName(name)\r\n\t\t\tdispatch(\r\n\t\t\t\tsetProfile(getDataForProfileFromResponseObj(res.data.updatedUser))\r\n\t\t\t)\r\n\t\t} catch (e: any) {}\r\n\t}\r\nexport const updateUserAvatar =\r\n\t(url: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tconst res = await authAPI.updateUserAvatarUrl(url)\r\n\t\t\tdispatch(\r\n\t\t\t\tsetProfile(getDataForProfileFromResponseObj(res.data.updatedUser))\r\n\t\t\t)\r\n\t\t} catch (e: any) {}\r\n\t}\r\nexport const clearProfileData = (): AppThunk => dispatch => {\r\n\tdispatch(\r\n\t\tsetProfile({\r\n\t\t\t_id: null,\r\n\t\t\tname: null,\r\n\t\t\temail: null,\r\n\t\t\tavatar: null,\r\n\t\t\tpublicCardPacksCount: null,\r\n\t\t\tverified: false,\r\n\t\t})\r\n\t)\r\n}\r\n// types\r\nexport type SetProfile = ReturnType<typeof setProfile>\r\nexport type ProfileStateType = typeof initialState\r\nexport type ProfileActionsType = SetProfile\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\nimport { clearProfileData, setProfileData } from './profile-reducer'\r\n\r\nconst initialState = {\r\n\tisAuthorized: false,\r\n\terror: '',\r\n\tisLoading: false,\r\n}\r\ntype InitialStateType = {\r\n\tisAuthorized: boolean\r\n\terror: string\r\n\tisLoading: boolean\r\n}\r\n\r\nexport const authReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: AuthActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'AUTH/LOGIN':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthorized: action.isAuthorized,\r\n\t\t\t}\r\n\t\tcase 'AUTH/ERROR':\r\n\t\t\treturn { ...state, error: action.err }\r\n\t\tcase 'AUTH/IS-LOADING':\r\n\t\t\treturn { ...state, isLoading: action.isLoading }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nexport const setIsAuthorized = (isAuthorized: boolean) =>\r\n\t({ type: 'AUTH/LOGIN', isAuthorized } as const)\r\nconst setError = (err: string) => ({ type: 'AUTH/ERROR', err } as const)\r\nexport const setIsLoading = (isLoading: boolean) =>\r\n\t({ type: 'AUTH/IS-LOADING', isLoading } as const)\r\n\r\n// thunks\r\nexport const LoginTC =\r\n\t(loginData: loginDataType): AppThunk =>\r\n\tdispatch => {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tauthAPI\r\n\t\t\t.login(loginData)\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet data: dataType = {\r\n\t\t\t\t\t_id: res.data._id,\r\n\t\t\t\t\tavatar: res.data.avatar,\r\n\t\t\t\t\tname: res.data.name,\r\n\t\t\t\t\temail: res.data.email,\r\n\t\t\t\t\tpublicCardPacksCount: res.data.publicCardPacksCount,\r\n\t\t\t\t\tverified: res.data.verified,\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(setProfileData(data))\r\n\t\t\t\tdispatch(setIsAuthorized(true))\r\n\t\t\t\tdispatch(setIsLoading(false))\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconst error = e.response\r\n\t\t\t\t\t? e.response.data.error\r\n\t\t\t\t\t: e.message + 'more details in console'\r\n\t\t\t\tdispatch(setError(error))\r\n\t\t\t\tdispatch(setIsLoading(false))\r\n\t\t\t})\r\n\t}\r\nexport const getMe = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tconst res = await authAPI.getMe()\r\n\t\tconst { _id, email, avatar, name, publicCardPacksCount, verified } =\r\n\t\t\tres.data\r\n\t\tdispatch(\r\n\t\t\tsetProfileData({\r\n\t\t\t\t_id,\r\n\t\t\t\temail,\r\n\t\t\t\tavatar,\r\n\t\t\t\tname,\r\n\t\t\t\tpublicCardPacksCount,\r\n\t\t\t\tverified,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(setIsAuthorized(true))\r\n\t} catch (e: any) {}\r\n}\r\nexport const logout = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tawait authAPI.logout()\r\n\t\tdispatch(setIsAuthorized(false))\r\n\t\tdispatch(clearProfileData())\r\n\t\tdispatch(setIsLoading(false))\r\n\t} catch (e: any) {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\n// types\r\nexport type LoginAT = ReturnType<typeof setIsAuthorized>\r\nexport type setErrorAT = ReturnType<typeof setError>\r\nexport type setIsLoadingAT = ReturnType<typeof setIsLoading>\r\nexport type dataType = {\r\n\t_id: string\r\n\temail: string\r\n\tname: string\r\n\tavatar: string\r\n\tpublicCardPacksCount: number\r\n\tverified: boolean\r\n}\r\nexport type loginDataType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n}\r\n\r\nexport type AuthActionsType = LoginAT | setErrorAT | setIsLoadingAT\r\n","export default __webpack_public_path__ + \"static/media/menu.e6378079.png\";","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../m2-bll/store'\r\nimport { logout } from '../../m2-bll/auth-reducer'\r\nimport menu from '../../../Media/menu/menu.png'\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\t// <button onClick={logoutHandler}>Logout</button>\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t\t{isAuthorized ? (\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tonClick={logoutHandler}\r\n\t\t\t\t\tto={'/'}\r\n\t\t\t\t\tclassName={styles.link}\r\n\t\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogout\r\n\t\t\t\t</NavLink>\r\n\t\t\t) : (\r\n\t\t\t\t<NavLink\r\n\t\t\t\t\tto={'/login'}\r\n\t\t\t\t\tclassName={styles.link}\r\n\t\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t\t>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</NavLink>\r\n\t\t\t)}\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/registration'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tRegistration\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/profile'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tProfile\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/404'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\t404\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/password/recovery'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tPassword Recovery\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/password/new'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tNew Password\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/test'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tTest\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink\r\n\t\t\t\tto={'/packs'}\r\n\t\t\t\tclassName={styles.link}\r\n\t\t\t\tactiveClassName={styles.active}\r\n\t\t\t>\r\n\t\t\t\tPacks\r\n\t\t\t</NavLink>\r\n\t\t\t<div>\r\n\t\t\t\t<img src={menu} className={styles.block} alt={menu} />\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport s from './Auth.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loginDataType, LoginTC } from '../../n1-main/m2-bll/auth-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\n\r\nconst Auth = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\tconst error = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.auth.error\r\n\t)\r\n\tconst isLoading = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isLoading\r\n\t)\r\n\tconst [email, setEmail] = useState('')\r\n\r\n\tconst onEmailChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst onPasswordChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst [rememberMe, setRememberMe] = useState(false)\r\n\r\n\tconst onRememberMeChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetRememberMe(e.currentTarget.checked)\r\n\t}\r\n\r\n\tconst Login = (e: any) => {\r\n\t\tconst loginData: loginDataType = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\trememberMe,\r\n\t\t}\r\n\t\tdispatch(LoginTC(loginData))\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\tif (isAuthorized) {\r\n\t\treturn <Redirect to={'/profile'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={Login} className={s.authPageContainer}>\r\n\t\t\t<div className={s.login}>\r\n\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t{error ? error : ''}\r\n\t\t\t\t<div className={s.emailPasswordLoginContainer}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={s.email}\r\n\t\t\t\t\t\tonChange={onEmailChangeHandler}\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={s.password}\r\n\t\t\t\t\t\tonChange={onPasswordChangeHandler}\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<label className={s.label}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tclassName={s.checkbox}\r\n\t\t\t\t\t\t\tonChange={onRememberMeChangeHandler}\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className={s.rememberMe}>Remember Me</div>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div className={s.recoveryContainer}>\r\n\t\t\t\t\t\t<NavLink className={s.recovery} to={'/password/recovery'}>\r\n\t\t\t\t\t\t\tForgot password\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={s.loginButtonContainer}>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={s.loginButton}\r\n\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<div className={s.signUpContainer}>\r\n\t\t\t\t\t\t<div className={s.account}>Don't have an account</div>\r\n\t\t\t\t\t\t<div className={s.SignUpContainer}>\r\n\t\t\t\t\t\t\t<NavLink className={s.SignUp} to={'/registration'}>\r\n\t\t\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Auth\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\nimport { setIsLoading } from './auth-reducer'\r\n\r\nconst initialState = {\r\n\tisRegistered: false,\r\n\terror: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: RegistrationActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'REGISTRATION/ERROR':\r\n\t\t\treturn { ...state, error: action.error }\r\n\t\tcase 'REGISTRATION/REGISTER':\r\n\t\t\treturn { ...state, isRegistered: action.isRegistered }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nexport const setError = (error: string | null) => ({ type: 'REGISTRATION/ERROR', error } as const)\r\nconst register = (isRegistered: boolean) => ({ type: 'REGISTRATION/REGISTER', isRegistered } as const)\r\n// thunks\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tdispatch(setError(null))\r\n\t\tawait authAPI.register(email, password)\r\n\t\tdispatch(register(true))\r\n\t} catch (e: any) {\r\n\t\tif (e.response) {\r\n\t\t\tdispatch(setError(e.response.data.error))\r\n\t\t} else {\r\n\t\t\tdispatch(setError(e.message))\r\n\t\t}\r\n\t} finally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\n// types\r\n\r\nexport type RegistrationActionsType = ReturnType<typeof setError> | ReturnType<typeof register>\r\n","import s from './Loader.module.css'\r\nimport React from 'react'\r\n\r\nconst Loader = () => {\r\n\treturn <div className={s.ldsEllipsis}>\r\n\t\t<div />\r\n\t\t<div />\r\n\t\t<div />\r\n\t\t<div />\r\n\t</div>\r\n}\r\n\r\nexport default Loader","import React, { ChangeEvent, FormEvent, useState } from 'react'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport s from './Registration.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { registerTC, setError } from '../../n1-main/m2-bll/registration-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport Loader from '../../n1-main/m1-ui/common/Loader/Loader'\r\n\r\nconst Registration = () => {\r\n\tconst [login, setLogin] = useState<string>('')\r\n\tconst [password, setPassword] = useState<string>('')\r\n\tconst [checkPassword, setCheckPassword] = useState<string>('')\r\n\r\n\tconst isRegistered = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.registration.isRegistered\r\n\t)\r\n\tconst error = useSelector<AppRootStateType, null | string>(\r\n\t\tstate => state.registration.error\r\n\t)\r\n\tconst isLoading = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isLoading\r\n\t)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\tconst onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetCheckPassword(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst abortRegistration = () => {\r\n\t\tsetLogin('')\r\n\t\tsetPassword('')\r\n\t\tsetCheckPassword('')\r\n\t\tdispatch(setError(null))\r\n\t}\r\n\r\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault()\r\n\t\tif (password === checkPassword) {\r\n\t\t\tdispatch(registerTC(login, password))\r\n\t\t} else {\r\n\t\t\tdispatch(setError('passwords must match'))\r\n\t\t}\r\n\t}\r\n\r\n\tif (isRegistered) {\r\n\t\treturn <Redirect to='/login' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div className={s.registrationContainer}>\r\n\t\t\t\t<h4>Sign Up</h4>\r\n\t\t\t\t<div className={s.inputFields}>\r\n\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t\tvalue={login}\r\n\t\t\t\t\t\tonChangeText={setLogin}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={onChangePassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='confirm password'\r\n\t\t\t\t\t\tvalue={checkPassword}\r\n\t\t\t\t\t\tonChange={onChangeCheckPassword}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.button}>\r\n\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\tclassName={s.btnCancelRegister}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={abortRegistration}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\tclassName={s.btnCancelRegister}\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRegister\r\n\t\t\t\t\t</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t{error && <div className={s.err}>{error}</div>}\r\n\t\t\t\t{isLoading && <Loader />}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Registration\r\n","export default __webpack_public_path__ + \"static/media/icon-avatar.22d7f1c8.jpg\";","export default __webpack_public_path__ + \"static/media/edit-icon.624705dd.svg\";","import React, { ChangeEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n\tProfileStateType,\r\n\tupdateUserAvatar,\r\n\tupdateUserName,\r\n} from '../../n1-main/m2-bll/profile-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport styles from './Profile.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport defaultAvatar from '../../Media/avatar/icon-avatar.jpg'\r\nimport editIcon from '../../Media/edit-icon.svg'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\n\r\nconst Profile = () => {\r\n\tconsole.log('Profile')\r\n\tconst dispatch = useDispatch()\r\n\tconst { name, email, avatar, publicCardPacksCount, verified } = useSelector<\r\n\t\tAppRootStateType,\r\n\t\tProfileStateType\r\n\t>(state => state.profile)\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\tconst [newAvatarInputValue, setNewAvatarInputValue] = useState('')\r\n\tconst [editAvatarMode, setEditAvatarMode] = useState(false)\r\n\tconst [newNameInputValue, setNewNameInputValue] = useState('')\r\n\tconst [editNameMode, setEditNameMode] = useState(false)\r\n\tconst [nameError, setNameError] = useState<string | undefined>(undefined)\r\n\tif (!isAuthorized) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\tconst nameValidation = (name: string): string => {\r\n\t\tif (name.length <= 3) {\r\n\t\t\treturn 'Must be more then 3 characters'\r\n\t\t}\r\n\t\treturn 'true'\r\n\t}\r\n\r\n\tconst editAvatar = () => {\r\n\t\tif (!editAvatarMode) {\r\n\t\t\tsetEditAvatarMode(true)\r\n\t\t} else {\r\n\t\t\tsetEditAvatarMode(false)\r\n\t\t\tsetNewAvatarInputValue('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst editName = () => {\r\n\t\tif (!editNameMode) {\r\n\t\t\tsetEditNameMode(true)\r\n\t\t\tsetNameError(undefined)\r\n\t\t\tif (name) {\r\n\t\t\t\tsetNewNameInputValue(name)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetNameError(undefined)\r\n\t\t\tsetEditNameMode(false)\r\n\t\t\tsetNewNameInputValue('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst onChangeNameInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetNameError(undefined)\r\n\t\tsetNewNameInputValue(e.target.value)\r\n\t}\r\n\r\n\tconst onChangeAvatarInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetNewAvatarInputValue(e.target.value)\r\n\t}\r\n\r\n\tconst sendNewAvatar = () => {\r\n\t\tdispatch(updateUserAvatar(newAvatarInputValue))\r\n\t\tsetNewAvatarInputValue('')\r\n\t\tsetEditAvatarMode(false)\r\n\t}\r\n\r\n\tconst sendNewName = () => {\r\n\t\tconst validation = nameValidation(newNameInputValue)\r\n\t\tif (validation === 'true') {\r\n\t\t\tdispatch(updateUserName(newNameInputValue))\r\n\t\t\tsetNewNameInputValue('')\r\n\t\t\tsetEditNameMode(false)\r\n\t\t\tsetNameError(undefined)\r\n\t\t} else {\r\n\t\t\tsetNameError(validation)\r\n\t\t}\r\n\t}\r\n\r\n\tconst editAvatarBlock = editAvatarMode && (\r\n\t\t<>\r\n\t\t\t<SuperInputText\r\n\t\t\t\tvalue={newAvatarInputValue}\r\n\t\t\t\tonChange={onChangeAvatarInputHandler}\r\n\t\t\t\tonEnter={sendNewAvatar}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t<SuperButton type='button' onClick={sendNewAvatar}>\r\n\t\t\t\t\tChange Avatar\r\n\t\t\t\t</SuperButton>\r\n\t\t\t\t<SuperButton canceling type='button' onClick={editAvatar}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</SuperButton>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n\r\n\tconst editNameBlock = editNameMode && (\r\n\t\t<>\r\n\t\t\t<SuperInputText\r\n\t\t\t\tvalue={newNameInputValue}\r\n\t\t\t\tonChange={onChangeNameInputHandler}\r\n\t\t\t\tonEnter={sendNewName}\r\n\t\t\t\terror={nameError}\r\n\t\t\t/>\r\n\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t<SuperButton onClick={sendNewName}>Change Name</SuperButton>\r\n\t\t\t\t<SuperButton canceling onClick={editName}>\r\n\t\t\t\t\tCancel\r\n\t\t\t\t</SuperButton>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className={styles.profileContainer}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={styles.avatar}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackground: `url(${\r\n\t\t\t\t\t\tavatar || defaultAvatar\r\n\t\t\t\t\t}) no-repeat center/cover`,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={styles.avatarChangeIconWrapper}\r\n\t\t\t\t\tonClick={editAvatar}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tbackground: `url(${editIcon}) no-repeat center/cover`,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={styles.avatarChangeIcon}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{editAvatarBlock}\r\n\t\t\t<div className={styles.userNameWrapper}>\r\n\t\t\t\t<span className={styles.name}>{name}</span>\r\n\t\t\t\t<span\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackground: `url(${editIcon}) no-repeat center/cover`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tclassName={styles.avatarChangeIcon}\r\n\t\t\t\t\tonClick={editName}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t{editNameBlock}\r\n\t\t\t<div>{`email: ${email}`}</div>\r\n\t\t\t<div>{`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–¥: ${publicCardPacksCount}`}</div>\r\n\t\t\t<div>{`–ü–æ—á—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞: ${verified ? '–î–∞' : '–ù–µ—Ç'}`}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\n\nconst Error404 = () => {\n\treturn <div>404</div>\n}\n\nexport default Error404\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\n\r\nconst initialState = {\r\n\trecoveryError: null as null | string,\r\n\trecoverySendSuccess: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoveryReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: PasswordRecoveryActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'PASSWORD-RECOVERY/SET-RECOVERY-ERROR': {\r\n\t\t\treturn { ...state, recoveryError: action.recoveryError }\r\n\t\t}\r\n\t\tcase 'PASSWORD-RECOVERY/SET-RECOVERY-SEND-SUCCESS': {\r\n\t\t\treturn { ...state, recoverySendSuccess: action.recoverySendSuccess }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nconst setRecoveryError = (recoveryError: null | string) =>\r\n\t({ type: 'PASSWORD-RECOVERY/SET-RECOVERY-ERROR', recoveryError } as const)\r\nconst setRecoverySendSuccess = (recoverySendSuccess: boolean) =>\r\n\t({\r\n\t\ttype: 'PASSWORD-RECOVERY/SET-RECOVERY-SEND-SUCCESS',\r\n\t\trecoverySendSuccess,\r\n\t} as const)\r\n// thunks\r\n\r\nexport const sendPasswordRecovery =\r\n\t(email: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait authAPI.sendPasswordRecoveryRequest(email)\r\n\t\t\tdispatch(setRecoveryError(null))\r\n\t\t\tdispatch(setRecoverySendSuccess(true))\r\n\t\t} catch (e: any) {\r\n\t\t\tdispatch(setRecoveryError(e.response.data.error))\r\n\t\t\tdispatch(setRecoverySendSuccess(false))\r\n\t\t}\r\n\t}\r\n// types\r\n\r\nexport type PasswordRecoveryActionsType =\r\n\t| ReturnType<typeof setRecoveryError>\r\n\t| ReturnType<typeof setRecoverySendSuccess>\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sendPasswordRecovery } from '../../n1-main/m2-bll/passwordRecovery-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport s from './PasswordRecovery.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\n\r\nconst PasswordRecovery = () => {\r\n\tconst recoveryError = useSelector<AppRootStateType, null | string>(\r\n\t\tstate => state.passwordRecovery.recoveryError\r\n\t)\r\n\tconst recoverySendSuccess = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.passwordRecovery.recoverySendSuccess\r\n\t)\r\n\tconst dispatch = useDispatch()\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\tconst onPressEnterInputHandler = () => {\r\n\t\tdispatch(sendPasswordRecovery(inputValue))\r\n\t}\r\n\tconst onClickButtonHandler = () => {\r\n\t\tdispatch(sendPasswordRecovery(inputValue))\r\n\t}\r\n\r\n\tif (recoverySendSuccess) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tA link to restore your password was sent to the specified email\r\n\t\t\t\taddress\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.passwordRecoveryContainer}>\r\n\t\t\t<h4>Forgot your password?</h4>\r\n\t\t\t<div className={s.inputField}>\r\n\t\t\t\t<SuperInputText\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={onChangeInputHandler}\r\n\t\t\t\t\tonEnter={onPressEnterInputHandler}\r\n\t\t\t\t\terror={recoveryError || undefined}\r\n\t\t\t\t/>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEnter your email address and we will send you further\r\n\t\t\t\t\tinstructions\r\n\t\t\t\t</p>\r\n\t\t\t\t<SuperButton onClick={onClickButtonHandler}>Send</SuperButton>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.positionBtn}>\r\n\t\t\t\t<p>If you remember your password</p>\r\n\t\t\t\t<NavLink to='/login' className={s.footerBtn}>\r\n\t\t\t\t\tSign In\r\n\t\t\t\t</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PasswordRecovery\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\n\r\nconst initialState = {\r\n\tnewPasswordSendingSuccess: false,\r\n\tnewPasswordSendingError: null as null | string,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: NewPasswordActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-SUCCESS':\r\n\t\tcase 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-ERROR': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nconst setNewPasswordSendingSuccess = (newPasswordSendingSuccess: boolean) =>\r\n\t({\r\n\t\ttype: 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-SUCCESS',\r\n\t\tpayload: { newPasswordSendingSuccess },\r\n\t} as const)\r\nconst setNewPasswordSendingError = (newPasswordSendingError: null | string) =>\r\n\t({\r\n\t\ttype: 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-ERROR',\r\n\t\tpayload: { newPasswordSendingError },\r\n\t} as const)\r\n\r\n// thunks\r\nexport const sendNewPassword =\r\n\t(password: string, resetPasswordToken: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait authAPI.sendNewPassword(password, resetPasswordToken)\r\n\t\t\tdispatch(setNewPasswordSendingSuccess(true))\r\n\t\t\tdispatch(setNewPasswordSendingError(null))\r\n\t\t} catch (e: any) {\r\n\t\t\tif (e.response) {\r\n\t\t\t\tdispatch(setNewPasswordSendingError(e.response.data.error))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetNewPasswordSendingError(\r\n\t\t\t\t\t\t'Something went wrong. Try again later.'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tdispatch(setNewPasswordSendingSuccess(false))\r\n\t\t}\r\n\t}\r\n\r\n// types\r\nexport type NewPasswordActionsType =\r\n\t| ReturnType<typeof setNewPasswordSendingSuccess>\r\n\t| ReturnType<typeof setNewPasswordSendingError>\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink, Redirect, useParams } from 'react-router-dom'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport { sendNewPassword } from '../../n1-main/m2-bll/newPassword-reducer'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport styles from './NewPassword.module.css'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\n\r\nconst NewPassword = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst newPasswordSendingSuccess = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.newPassword.newPasswordSendingSuccess\r\n\t)\r\n\tconst newPasswordSendingError = useSelector<AppRootStateType, null | string>(\r\n\t\tstate => state.newPassword.newPasswordSendingError\r\n\t)\r\n\tconst [newPasswordValue, setNewPasswordValue] = useState('')\r\n\tconst [confirmPasswordValue, setConfirmPasswordValue] = useState('')\r\n\tconst [isPasswordsMatch, setIsPasswordsMatch] = useState(true)\r\n\tconst [isPasswordValid, setIsPasswordValid] = useState<boolean | null>(null)\r\n\t//—Ç–æ–∫–µ–Ω –∏–∑ URL. –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ undefined\r\n\tconst { token } = useParams<{ token: string }>()\r\n\r\n\t//–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π\r\n\tconst checkIsPasswordsMatch = (\r\n\t\tnewPassword: string,\r\n\t\tconfirmPassword: string\r\n\t) => {\r\n\t\tsetIsPasswordsMatch(newPassword === confirmPassword)\r\n\t}\r\n\r\n\t//–≤–∞–ª–∏–¥–∞—Ü–∏—è 6 —Å–∏–º–≤–æ–ª–æ–≤ –∏ –±–æ–ª—å—à–µ\r\n\tconst checkIsPasswordsValid = (newPassword: string) => {\r\n\t\tsetIsPasswordValid(newPassword.length >= 8)\r\n\t}\r\n\r\n\tconst onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\te.target.name === 'newPassword' && setNewPasswordValue(e.target.value)\r\n\t\te.target.name === 'confirmPassword' &&\r\n\t\t\tsetConfirmPasswordValue(e.target.value)\r\n\t}\r\n\r\n\tconst sendNewPasswordHandler = () => {\r\n\t\ttoken &&\r\n\t\t\tisPasswordValid &&\r\n\t\t\tisPasswordsMatch &&\r\n\t\t\tdispatch(sendNewPassword(confirmPasswordValue, token))\r\n\t}\r\n\r\n\tif (newPasswordSendingSuccess) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.newPasswordContainer}>\r\n\t\t\t<h2>New Password</h2>\r\n\t\t\t{/*–µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞, —Ç–æ –Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —é–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∫–∞–≤–µ—Ä–∏*/}\r\n\t\t\t{!token && (\r\n\t\t\t\t<div className={styles.tokenNotFoundBlock}>\r\n\t\t\t\t\t<span>You mast to request recovery link to your email</span>\r\n\t\t\t\t\t<NavLink to={'/password/recovery'}>\r\n\t\t\t\t\t\t<SuperButton>Recover Password</SuperButton>\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t{token && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={styles.enterNewPasswordBlock}>\r\n\t\t\t\t\t\t<span>Enter new password</span>\r\n\t\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\t\tname={'newPassword'}\r\n\t\t\t\t\t\t\tplaceholder={'Enter new password'}\r\n\t\t\t\t\t\t\tvalue={newPasswordValue}\r\n\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\tonChangeInputHandler(e)\r\n\t\t\t\t\t\t\t\tcheckIsPasswordsValid(e.target.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\tisPasswordValid !== null && !isPasswordValid\r\n\t\t\t\t\t\t\t\t\t? 'Password must be more then 7 character'\r\n\t\t\t\t\t\t\t\t\t: undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.confirmNewPasswordBlock}>\r\n\t\t\t\t\t\t<span>Confirm new password</span>\r\n\t\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\t\tname={'confirmPassword'}\r\n\t\t\t\t\t\t\tplaceholder={'confirm password'}\r\n\t\t\t\t\t\t\tvalue={confirmPasswordValue}\r\n\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\tonChangeInputHandler(e)\r\n\t\t\t\t\t\t\t\tcheckIsPasswordsMatch(newPasswordValue, e.target.value)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t!isPasswordsMatch ? 'Passwords must match' : undefined\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SuperButton onClick={sendNewPasswordHandler}>\r\n\t\t\t\t\t\t\tSend New password\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{newPasswordSendingError && (\r\n\t\t\t\t\t\t<div className={styles.error}>{newPasswordSendingError}</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewPassword\r\n","import { cardsPacksAPI } from '../m3-dal/api'\r\nimport { AppThunk } from './store'\r\n\r\nconst InitialState = {\r\n\tpacks: [] as Array<CardsPackType>,\r\n\tcardPacksTotalCount: 0,\r\n\tmaxCardsCount: 1000,\r\n\tminCardsCount: 0,\r\n\tpage: 1,\r\n\tpageCount: 20,\r\n\tsortPacks: '0updated',\r\n\tpackName: '',\r\n}\r\nexport type InitialStateType = typeof InitialState\r\n\r\nexport const packsReducer = (\r\n\tstate: any = InitialState,\r\n\taction: PacksActionType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET-PACKS':\r\n\t\t\treturn { ...state, packs: action.packs }\r\n\t\tcase 'PACKS/SET-GET-PACKS-PARAMS': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn { ...state }\r\n\t}\r\n}\r\n\r\n//actions\r\nconst setPacks = (packs: any) => ({ type: 'SET-PACKS', packs } as const)\r\nconst setGetPacksParams = (params: {\r\n\tcardPacksTotalCount?: number\r\n\tmaxCardsCount?: number\r\n\tminCardsCount?: number\r\n\tpage?: number\r\n\tpageCount?: number\r\n\tsortPacks?: string\r\n\tpackName?: string\r\n}) =>\r\n\t({\r\n\t\ttype: 'PACKS/SET-GET-PACKS-PARAMS',\r\n\t\tpayload: { ...params },\r\n\t} as const)\r\n\r\n//thunk\r\nexport const getPacksTC =\r\n\t(user_id?: string | null): AppThunk =>\r\n\tasync (dispatch, getState) => {\r\n\t\ttry {\r\n\t\t\tconst {\r\n\t\t\t\tpageCount,\r\n\t\t\t\tpackName,\r\n\t\t\t\tsortPacks,\r\n\t\t\t\tmaxCardsCount,\r\n\t\t\t\tminCardsCount,\r\n\t\t\t\tpage,\r\n\t\t\t} = getState().packs\r\n\t\t\tlet params = {\r\n\t\t\t\tpageCount,\r\n\t\t\t\tpackName,\r\n\t\t\t\tsortPacks,\r\n\t\t\t\tmaxCardsCount,\r\n\t\t\t\tminCardsCount,\r\n\t\t\t\tpage,\r\n\t\t\t}\r\n\t\t\tconst resultParams = user_id ? { ...params, user_id } : params\r\n\t\t\tconst res = await cardsPacksAPI.getPacks(resultParams)\r\n\t\t\tdispatch(setPacks(res.data.cardPacks))\r\n\t\t\tdispatch(\r\n\t\t\t\tsetGetPacksParams({\r\n\t\t\t\t\tcardPacksTotalCount: res.data.cardPacksTotalCount,\r\n\t\t\t\t\tmaxCardsCount: res.data.maxCardsCount,\r\n\t\t\t\t\tminCardsCount: res.data.minCardsCount,\r\n\t\t\t\t\tpage: res.data.page,\r\n\t\t\t\t\tpageCount: res.data.pageCount,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\nexport const addNewPack =\r\n\t(\r\n\t\tname: string,\r\n\t\tprivatePack: boolean = false,\r\n\t\tdeckCover: string = '',\r\n\t\tuserID?: string | null\r\n\t): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait cardsPacksAPI.addPack(name, privatePack, deckCover)\r\n\t\t\tdispatch(getPacksTC(userID))\r\n\t\t} catch (e) {}\r\n\t}\r\nexport const updatePackName =\r\n\t(packId: string, packName: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait cardsPacksAPI.updatePackName(packId, packName)\r\n\t\t\tdispatch(getPacksTC())\r\n\t\t} catch (e) {}\r\n\t}\r\nexport const deletePack =\r\n\t(packId: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait cardsPacksAPI.deletePack(packId)\r\n\t\t\tdispatch(getPacksTC())\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\nexport const changeGetPackParams =\r\n\t(params: {\r\n\t\tmaxCardsCount?: number\r\n\t\tminCardsCount?: number\r\n\t\tpage?: number\r\n\t\tpageCount?: number\r\n\t\tsortPacks?: string\r\n\t\tpackName?: string\r\n\t}): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tdispatch(setGetPacksParams({ ...params }))\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n//types\r\nexport type CardsPackType = {\r\n\tcardsCount: 1\r\n\tcreated: '2021-09-27T13:05:01.706Z'\r\n\tname: 'Ivaaaan Fuckofff'\r\n\tprivate: false\r\n\trating: 0\r\n\ttype: 'pack'\r\n\tupdated: '2021-09-28T14:26:58.131Z'\r\n\tuser_id: '6146317c723dff00045fb368'\r\n\tuser_name: '–í12341231'\r\n\t_id: '6151c17da9f5a13da4d7e643'\r\n}\r\nexport type setPacksAT = ReturnType<typeof setPacks>\r\nexport type SetGetPacksParamsType = ReturnType<typeof setGetPacksParams>\r\nexport type PacksActionType = setPacksAT | SetGetPacksParamsType\r\n","import React from 'react'\r\nimport s from './Modal.module.css'\r\n\r\ntype PropsType = {\r\n\tOnBackClick: () => void\r\n\tchildren: React.ReactNode\r\n}\r\n\r\nconst Modal = (props: PropsType) => {\r\n\treturn (\r\n\t\t<div className={s.Container}>\r\n\t\t\t<div onClick={props.OnBackClick} className={s.background} />\r\n\t\t\t<div className={s.main}>{props.children}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Modal\r\n","import React, { useState } from 'react'\r\n//–Ω–µ –¥–æ–±–∞–≤–ª—è–ª –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π, —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–µ–π –∏–∑–º–µ–Ω—è—Ç—å –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ\r\nimport s from '../Packs.module.css'\r\nimport SuperInputText from '../../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { CardsPackType } from '../../../n1-main/m2-bll/packs-reducer'\r\nimport Modal from '../../../n1-main/m1-ui/common/Modal/Modal'\r\n\r\ntype PropsType = {\r\n\tpack: CardsPackType\r\n\tuserID: string | null\r\n\tonUpdatePackNameHandler: (\r\n\t\tpackId: string,\r\n\t\tupdateMyPackNameInputValue: string\r\n\t) => void\r\n\tdeletePackHandler: (packId: string) => void\r\n}\r\n\r\nconst PacksListItem = (props: PropsType) => {\r\n\tconst { pack, userID, onUpdatePackNameHandler, deletePackHandler } = props\r\n\r\n\tconst [updateMyPackNameMode, setUpdateMyPackNameMode] = useState(false)\r\n\tconst [updateMyPackNameInputValue, setUpdateMyPackNameInputValue] =\r\n\t\tuseState('')\r\n\r\n\tconst onToggleUpdateMyPackNameMode = () => {\r\n\t\tif (!updateMyPackNameMode) {\r\n\t\t\tsetUpdateMyPackNameInputValue(pack.name)\r\n\t\t}\r\n\t\tsetUpdateMyPackNameMode((prevValue: boolean) => {\r\n\t\t\treturn !prevValue\r\n\t\t})\r\n\t}\r\n\r\n\tconst onUpdatePackName = () => {\r\n\t\tonUpdatePackNameHandler(pack._id, updateMyPackNameInputValue)\r\n\t\tonToggleUpdateMyPackNameMode()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.Pack}>\r\n\t\t\t<div className={s.nameColumn}>{pack.name}</div>\r\n\t\t\t<div className={s.cardsCountColumn}>{pack.cardsCount}</div>\r\n\t\t\t<div className={s.updatedColumn}>\r\n\t\t\t\t{new Date(pack.updated).toLocaleString('ru-RU')}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.urlColumn}>some url</div>\r\n\t\t\t<div className={s.actionsWithPackBlock}>\r\n\t\t\t\t{userID && userID === pack.user_id && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{updateMyPackNameMode ? (\r\n\t\t\t\t\t\t\t<Modal OnBackClick={onToggleUpdateMyPackNameMode}>\r\n\t\t\t\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\t\t\t\tclassName={s.addPackModalInput}\r\n\t\t\t\t\t\t\t\t\tplaceholder={'enter new name'}\r\n\t\t\t\t\t\t\t\t\tvalue={updateMyPackNameInputValue}\r\n\t\t\t\t\t\t\t\t\tonChangeText={setUpdateMyPackNameInputValue}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<div className={s.updatePackNameModalButtonsBlock}>\r\n\t\t\t\t\t\t\t\t\t<SuperButton onClick={onUpdatePackName}>\r\n\t\t\t\t\t\t\t\t\t\tSend New Name\r\n\t\t\t\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\t\t\t\t\tcanceling\r\n\t\t\t\t\t\t\t\t\t\tonClick={onToggleUpdateMyPackNameMode}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\tdeletePackHandler(pack._id)\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t\t\t<SuperButton onClick={onToggleUpdateMyPackNameMode}>\r\n\t\t\t\t\t\t\t\t\tUpdate Name\r\n\t\t\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<NavLink to={`/cards/${pack._id}`}>Cards</NavLink>\r\n\t\t\t\t<NavLink to={`/learn/${pack._id}`}>Learn</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PacksListItem\r\n","import React, { ReactElement } from 'react'\r\nimport styles from './SuperPaginator.module.css'\r\n\r\ntype UsersType = {\r\n\tpageSize: number\r\n\ttotalItemsCount: number\r\n\tcurrentPage: number\r\n\tonPageClick: (page: number) => void\r\n}\r\n\r\nconst SuperPaginator = React.memo((props: UsersType) => {\r\n\tconst { pageSize, totalItemsCount, currentPage, onPageClick } = props\r\n\r\n\tconst leftPortionPageNumber = 5\r\n\tconst rightPortionPageNumber = 5\r\n\tconst correctRightPortionPageNumber =\r\n\t\tcurrentPage <= leftPortionPageNumber\r\n\t\t\t? rightPortionPageNumber + (leftPortionPageNumber - currentPage) + 1\r\n\t\t\t: rightPortionPageNumber\r\n\r\n\tconst pagesArray: Array<ReactElement<any, any>> = []\r\n\tconst pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\tfor (let i = 1; i <= pagesCount; i++) {\r\n\t\tif (i - currentPage < -leftPortionPageNumber) {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tif (i - currentPage > correctRightPortionPageNumber) {\r\n\t\t\tbreak\r\n\t\t}\r\n\t\tpagesArray.push(\r\n\t\t\t<span\r\n\t\t\t\tkey={i}\r\n\t\t\t\tclassName={`${styles.pageNumber} ${\r\n\t\t\t\t\tcurrentPage === i && styles.selectedPage\r\n\t\t\t\t}`}\r\n\t\t\t\tonClick={() => onPageClick(i)}\r\n\t\t\t>\r\n\t\t\t\t{i}\r\n\t\t\t</span>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>{pagesArray}</div>\r\n\t\t</div>\r\n\t)\r\n})\r\n\r\nexport default SuperPaginator\r\n","import React from 'react'\r\nimport SuperPaginator from '../../../n1-main/m1-ui/common/SuperPaginator/SuperPaginator'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../../n1-main/m2-bll/store'\r\nimport { changeGetPackParams } from '../../../n1-main/m2-bll/packs-reducer'\r\n\r\ntype PacksPaginatorProps = {\r\n\tuserId: string | null\r\n}\r\n\r\nconst PacksPaginator = (props: PacksPaginatorProps) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst pageCount = useSelector<AppRootStateType, number>(\r\n\t\tstate => state.packs.pageCount\r\n\t)\r\n\tconst cardPacksTotalCount = useSelector<AppRootStateType, number>(\r\n\t\tstate => state.packs.cardPacksTotalCount\r\n\t)\r\n\tconst currentPage = useSelector<AppRootStateType, number>(\r\n\t\tstate => state.packs.page\r\n\t)\r\n\r\n\tconst onPageClick = (page: number) => {\r\n\t\tdispatch(changeGetPackParams({ page }))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SuperPaginator\r\n\t\t\tpageSize={pageCount}\r\n\t\t\ttotalItemsCount={cardPacksTotalCount}\r\n\t\t\tcurrentPage={currentPage}\r\n\t\t\tonPageClick={onPageClick}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default PacksPaginator\r\n","import React, { FC, useEffect, useState } from 'react'\r\nimport SuperInputText from '../SuperInputText/SuperInputText'\r\n\r\ntype SearchPropsType = {\r\n\thandler: (value: string) => void\r\n\tplaceholder: string\r\n}\r\n\r\nexport const Search: FC<SearchPropsType> = ({ handler, placeholder }) => {\r\n\tconst [value, setValue] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tconst timerId = setTimeout(() => {\r\n\t\t\thandler(value)\r\n\t\t}, 350)\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(timerId)\r\n\t\t}\r\n\t}, [value, handler])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SuperInputText placeholder={placeholder} value={value} onChangeText={setValue} />\r\n\t\t</div>\r\n\t)\r\n}","import SuperRange from '../../../n1-main/m1-ui/common/SuperRange/SuperRange'\r\nimport { FC, useState } from 'react'\r\nimport s from './Slider.module.css'\r\n\r\ntype SliderPropsType = {\r\n\tmin: number\r\n\tmax: number\r\n\tonChange: (value: number) => void\r\n}\r\n\r\n\r\nexport const Slider: FC<SliderPropsType> = ({ min, max, onChange }) => {\r\n\tconst [leftValue, setLeftValue] = useState(50)\r\n\tconst [rightValue, setRightValue] = useState(50)\r\n\tconst [leftWidth, setLeftWidth] = useState(200)\r\n\tconst [rightWidth, setRightWidth] = useState(200)\r\n\tconst onLeftRangeChange = (value: number) => {\r\n\t\tsetLeftValue(value)\r\n\t\tconsole.log(value)\r\n\t}\r\n\tconst onRightRangeChange = (value: number) => {\r\n\t\tsetRightValue(value)\r\n\t\tconsole.log(value)\r\n\t\t//setLeftWidth(leftWidth - 1)\r\n\t\t//setRightWidth(rightWidth + 1)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SuperRange className={s.leftRange} onChangeRange={onLeftRangeChange}\r\n\t\t\t\t\t\t\tstyle={{ width: leftWidth }} value={leftValue} />\r\n\t\t\t<SuperRange className={s.rightRange} onChangeRange={onRightRangeChange}\r\n\t\t\t\t\t\t\tstyle={{ width: rightWidth }} value={rightValue} />\r\n\t\t</div>\r\n\t)\r\n}","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport s from './Packs.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n\taddNewPack,\r\n\tCardsPackType,\r\n\tchangeGetPackParams,\r\n\tdeletePack,\r\n\tgetPacksTC,\r\n\tupdatePackName,\r\n} from '../../n1-main/m2-bll/packs-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport { Redirect } from 'react-router-dom'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport PacksListItem from './PacksListItem/PacksListItem'\r\nimport PacksPaginator from './PacksPaginator/PacksPaginator'\r\nimport { Search } from '../../n1-main/m1-ui/common/Search/Search'\r\nimport { Slider } from './Slider/Slider'\r\nimport Modal from '../../n1-main/m1-ui/common/Modal/Modal'\r\n\r\nexport const Packs = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst [addNewPackNameInputValue, setAddNewPackNameInputValue] = useState('')\r\n\tconst [showOnlyMyPack, setShowOnlyMyPack] = useState(false)\r\n\tconst [showModal, setShowModal] = useState(false)\r\n\tconst packName = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.packs.packName\r\n\t)\r\n\tconst sortPacks = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.packs.sortPacks\r\n\t)\r\n\r\n\tconst CardsPacks = useSelector<AppRootStateType, Array<CardsPackType>>(\r\n\t\tstate => state.packs.packs\r\n\t)\r\n\tconst userID = useSelector<AppRootStateType, string | null>(\r\n\t\tstate => state.profile._id\r\n\t)\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\r\n\tconst currentPage = useSelector<AppRootStateType, number>(\r\n\t\tstate => state.packs.page\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isAuthorized) {\r\n\t\t\t//–æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ª–∏ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –≤—Å–µ –ø–∞–∫–∏ –∏–ª–∏ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\r\n\t\t\tconst userIDForGettingPacks = showOnlyMyPack ? userID : null\r\n\t\t\tdispatch(getPacksTC(userIDForGettingPacks))\r\n\t\t}\r\n\t}, [packName, sortPacks, currentPage])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isAuthorized) {\r\n\t\t\tsetAddNewPackNameInputValue('')\r\n\t\t}\r\n\t}, [CardsPacks])\r\n\r\n\tconst showAddModal = () => {\r\n\t\tsetShowModal(true)\r\n\t}\r\n\r\n\tconst addNewPackHandler = () => {\r\n\t\tif (showOnlyMyPack) {\r\n\t\t\tdispatch(addNewPack(addNewPackNameInputValue, false, '', userID))\r\n\t\t\tsetShowModal(false)\r\n\t\t} else {\r\n\t\t\tdispatch(addNewPack(addNewPackNameInputValue, false, ''))\r\n\t\t\tsetShowModal(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst deletePackHandler = (packId: string) => {\r\n\t\tdispatch(deletePack(packId))\r\n\t}\r\n\r\n\tconst getMyPacksHandler = () => {\r\n\t\tdispatch(getPacksTC(userID))\r\n\t\tsetShowOnlyMyPack(true)\r\n\t}\r\n\r\n\tconst getAllPacksHandler = () => {\r\n\t\tdispatch(getPacksTC())\r\n\t\tsetShowOnlyMyPack(false)\r\n\t}\r\n\r\n\tconst onUpdatePackNameHandler = (packId: string, packName: string) => {\r\n\t\tdispatch(updatePackName(packId, packName))\r\n\t}\r\n\r\n\tconst searchPacksByName = (value: string) => {\r\n\t\tdispatch(changeGetPackParams({ packName: value }))\r\n\t}\r\n\r\n\tconst sortColumn = (name: string) => {\r\n\t\tif (sortPacks === `0${name}`) {\r\n\t\t\tdispatch(changeGetPackParams({ sortPacks: `1${name}` }))\r\n\t\t} else {\r\n\t\t\tdispatch(changeGetPackParams({ sortPacks: `0${name}` }))\r\n\t\t}\r\n\t}\r\n\r\n\tconst sortedSign = (name: string) => {\r\n\t\tif (sortPacks.slice(1) !== name) {\r\n\t\t\treturn `\\u21C5`\r\n\t\t} else if (sortPacks.slice(0, 1) === '0') {\r\n\t\t\treturn `\\u25BC`\r\n\t\t} else {\r\n\t\t\treturn '\\u25B2'\r\n\t\t}\r\n\t}\r\n\r\n\tconst OnModalBackClick = () => {\r\n\t\tsetShowModal(false)\r\n\t\tsetAddNewPackNameInputValue('')\r\n\t}\r\n\r\n\tif (!isAuthorized) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\t// if(showModal){\r\n\t// \treturn <Modal OnBackClick={() => setShowModal(false)}>\r\n\t// \t\t<input onChange={onModalChange} />\r\n\t// \t\t<button onClick={addNewPackHandler}>Add</button>\r\n\t// \t</Modal>\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className={s.CardsPacksContainer}>\r\n\t\t\t{showModal && (\r\n\t\t\t\t<Modal OnBackClick={OnModalBackClick}>\r\n\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\tvalue={addNewPackNameInputValue}\r\n\t\t\t\t\t\tonChangeText={setAddNewPackNameInputValue}\r\n\t\t\t\t\t\tclassName={s.addPackModalInput}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SuperButton onClick={addNewPackHandler}>Add</SuperButton>\r\n\t\t\t\t</Modal>\r\n\t\t\t)}\r\n\t\t\t<Slider min={0} max={100} onChange={value => console.log(value)} />\r\n\t\t\t<Search handler={searchPacksByName} placeholder={'Search...'} />\r\n\t\t\t<div className={s.CardsPacks}>\r\n\t\t\t\t<div className={s.addingNewPackBlock}>\r\n\t\t\t\t\t{!showOnlyMyPack ? (\r\n\t\t\t\t\t\t<SuperButton onClick={getMyPacksHandler}>\r\n\t\t\t\t\t\t\tShow My Packs\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<SuperButton onClick={getAllPacksHandler}>\r\n\t\t\t\t\t\t\tShow All Packs\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<SuperButton onClick={showAddModal}>Add New Pack</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.PacksParams}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.nameColumn} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('name')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t\t<span>{sortedSign('name')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.cardsCountColumn} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('cardsCount')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCardsCount\r\n\t\t\t\t\t\t<span>{sortedSign('cardsCount')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.updatedColumn} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('updated')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpdated\r\n\t\t\t\t\t\t<span>{sortedSign('updated')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.urlColumn}>Url</div>\r\n\t\t\t\t\t<div className={s.cardsColumn}>Cards</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.PacksContainer}>\r\n\t\t\t\t\t{CardsPacks.map((pack: any) => (\r\n\t\t\t\t\t\t<PacksListItem\r\n\t\t\t\t\t\t\tkey={pack._id}\r\n\t\t\t\t\t\t\tpack={pack}\r\n\t\t\t\t\t\t\tuserID={userID}\r\n\t\t\t\t\t\t\tonUpdatePackNameHandler={onUpdatePackNameHandler}\r\n\t\t\t\t\t\t\tdeletePackHandler={deletePackHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<PacksPaginator userId={showOnlyMyPack ? userID : null} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { cardsPacksAPI } from '../m3-dal/api'\r\nimport { AppRootStateType, AppThunk } from './store'\r\n\r\nconst InitialState = {\r\n\tcards: [] as Array<CardType>,\r\n\tpackUserId: null as string | null,\r\n\tcardAnswer: '',\r\n\tcardQuestion: '',\r\n\tsortCards: '0updated',\r\n}\r\nexport type InitialStateType = typeof InitialState\r\n\r\nexport const cardsReducer = (\r\n\tstate: any = InitialState,\r\n\taction: CardsActionType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET-CARDS':\r\n\t\t\treturn { ...state, cards: action.cards, packUserId: action.packUserId }\r\n\t\tcase 'CLEAR-CARDS': {\r\n\t\t\treturn { ...state, cards: [], packUserId: null }\r\n\t\t}\r\n\t\tcase 'CARDS/SET-GET-CARDS-PARAMS': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn { ...state }\r\n\t}\r\n}\r\n\r\n//actions\r\nconst setCards = (cards: CardType, packUserId: string) =>\r\n\t({ type: 'SET-CARDS', cards, packUserId } as const)\r\nconst clearCards = () => ({ type: 'CLEAR-CARDS' } as const)\r\nconst setGetCardsParams = (params: {\r\n\tcardAnswer?: string\r\n\tcardQuestion?: string\r\n\tsortCards?: string\r\n}) =>\r\n\t({\r\n\t\ttype: 'CARDS/SET-GET-CARDS-PARAMS',\r\n\t\tpayload: { ...params },\r\n\t} as const)\r\n\r\n//thunk\r\n\r\nexport const addCard =\r\n\t(\r\n\t\tcardsPack_id: string,\r\n\t\tquestion: string,\r\n\t\tanswer: string,\r\n\t\tparamsForGettingCards: { pageCount: number; cardsPack_id: string }\r\n\t) =>\r\n\t(dispatch: any) => {\r\n\t\tcardsPacksAPI.addCard(cardsPack_id, question, answer).then(res => {\r\n\t\t\tdispatch(getCardsTC(paramsForGettingCards))\r\n\t\t})\r\n\t}\r\nexport const getCardsTC =\r\n\t(params: any) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n\t\tconst { cards } = getState()\r\n\t\tparams.cardQuestion = cards.cardQuestion\r\n\t\tparams.cardAnswer = cards.cardAnswer\r\n\t\tparams.sortCards = cards.sortCards\r\n\t\tcardsPacksAPI.getCards(params).then(res => {\r\n\t\t\tdispatch(setCards(res.data.cards, res.data.packUserId))\r\n\t\t})\r\n\t}\r\nexport const deleteCard =\r\n\t(\r\n\t\tcardId: string,\r\n\t\tparamsForGettingCards: { pageCount: number; cardsPack_id: string }\r\n\t): AppThunk =>\r\n\tasync dispatch => {\r\n\t\tawait cardsPacksAPI.deleteCard(cardId)\r\n\t\tdispatch(getCardsTC(paramsForGettingCards))\r\n\t}\r\nexport const updateCard =\r\n\t(\r\n\t\tcardId: string,\r\n\t\tquestion: string,\r\n\t\tanswer: string,\r\n\t\tparamsForGettingCards: { pageCount: number; cardsPack_id: string }\r\n\t): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait cardsPacksAPI.updateCard(cardId, question, answer)\r\n\t\t\tdispatch(getCardsTC(paramsForGettingCards))\r\n\t\t} catch (e) {}\r\n\t}\r\nexport const clearCardsData = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(clearCards())\r\n\t} catch (e) {}\r\n}\r\nexport const changeGetCardsParams =\r\n\t(params: {\r\n\t\tcardAnswer?: string\r\n\t\tcardQuestion?: string\r\n\t\tsortCards?: string\r\n\t}): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tdispatch(setGetCardsParams({ ...params }))\r\n\t\t} catch (e) {}\r\n\t}\r\nexport const gradeCard =\r\n\t(cardsPack_id: string, card_id: string, grade: number): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait cardsPacksAPI.gradeCard(card_id, grade)\r\n\t\t\tdispatch(getCardsTC({ cardsPack_id }))\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n//types\r\n\r\nexport type CardType = {\r\n\tanswer: 'no answer'\r\n\tcardsPack_id: '615328794022038ed07f6373'\r\n\tcomments: ''\r\n\tcreated: '2021-09-28T15:00:36.665Z'\r\n\tgrade: 0\r\n\tquestion: 'no question'\r\n\trating: 0\r\n\tshots: 0\r\n\ttype: 'card'\r\n\tupdated: '2021-09-28T15:00:36.665Z'\r\n\tuser_id: '6146317c723dff00045fb368'\r\n\t_id: '61532e144022038ed07f6375'\r\n}\r\nexport type setCardsAT = ReturnType<typeof setCards>\r\ntype ClearCards = ReturnType<typeof clearCards>\r\ntype SetGetCardsParamsAT = ReturnType<typeof setGetCardsParams>\r\nexport type CardsActionType = setCardsAT | ClearCards | SetGetCardsParamsAT\r\n","import React from 'react'\r\nimport s from '../Cards.module.css'\r\nimport { CardType, deleteCard } from '../../../n1-main/m2-bll/—Åards-reducer'\r\nimport { useDispatch } from 'react-redux'\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\n\r\ntype PropsType = {\r\n\tcard: CardType\r\n\tuserID: string | null\r\n\tonUpdateCartHandler: (\r\n\t\tcardId: string,\r\n\t\tcardQuestion: string,\r\n\t\tcardAnswer: string\r\n\t) => void\r\n}\r\n\r\nconst CardsListItem = (props: PropsType) => {\r\n\tconst { card, userID, onUpdateCartHandler } = props\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onDeleteCardHandler = () => {\r\n\t\tdispatch(\r\n\t\t\tdeleteCard(card._id, {\r\n\t\t\t\tpageCount: 100,\r\n\t\t\t\tcardsPack_id: card.cardsPack_id,\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.Card}>\r\n\t\t\t\t<div className={s.question}>{card.question}</div>\r\n\t\t\t\t<div className={s.answer}>{card.answer}</div>\r\n\t\t\t\t<div className={s.grade}>{card.grade}</div>\r\n\t\t\t\t<div className={s.updated}>\r\n\t\t\t\t\t{new Date(card.updated).toLocaleString('ru-RU')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.url}>some url</div>\r\n\t\t\t\t{card.user_id === userID ? (\r\n\t\t\t\t\t<div className={s.actionsWithCard}>\r\n\t\t\t\t\t\t<SuperButton onClick={onDeleteCardHandler}>\r\n\t\t\t\t\t\t\tDelete\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tonUpdateCartHandler(\r\n\t\t\t\t\t\t\t\t\tcard._id,\r\n\t\t\t\t\t\t\t\t\tcard.question,\r\n\t\t\t\t\t\t\t\t\tcard.answer\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardsListItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport s from './Cards.module.css'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n\taddCard,\r\n\tCardType,\r\n\tchangeGetCardsParams,\r\n\tclearCardsData,\r\n\tgetCardsTC,\r\n\tupdateCard,\r\n} from '../../n1-main/m2-bll/—Åards-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport CardsListItem from './CardsListItem/CardsListItem'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport { Search } from '../../n1-main/m1-ui/common/Search/Search'\r\nimport Modal from '../../n1-main/m1-ui/common/Modal/Modal'\r\n\r\nexport const Cards = () => {\r\n\tconst [cardQuestionTextValue, setCardQuestionTextValue] = useState('')\r\n\tconst [cardQuestionValidateError, setCardQuestionValidateError] =\r\n\t\tuseState<undefined | string>(undefined)\r\n\tconst [cardAnswerTextValue, setCardAnswerTextValue] = useState('')\r\n\tconst [cardAnswerValidateError, setCardAnswerValidateError] =\r\n\t\tuseState<undefined | string>(undefined)\r\n\tconst [addNewCardMode, setAddNewCardMode] = useState(false)\r\n\tconst [updateCardMode, setUpdateCardMode] = useState(false)\r\n\tconst [updatingCardId, setUpdatingCardId] = useState<null | string>(null)\r\n\r\n\tconst minCharacterNumber = 2\r\n\r\n\tconst { cardsPackID } = useParams<{ cardsPackID: string }>()\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst cardQuestion = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.cards.cardQuestion\r\n\t)\r\n\tconst cardAnswer = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.cards.cardAnswer\r\n\t)\r\n\tconst sortCards = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.cards.sortCards\r\n\t)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cardsPackID) {\r\n\t\t\tdispatch(getCardsTC({ cardsPack_id: cardsPackID, pageCount: 100 }))\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch(clearCardsData())\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cardsPackID) {\r\n\t\t\tdispatch(getCardsTC({ cardsPack_id: cardsPackID, pageCount: 100 }))\r\n\t\t}\r\n\t}, [cardQuestion, cardAnswer, sortCards])\r\n\r\n\tconst cards = useSelector<AppRootStateType, Array<CardType>>(\r\n\t\tstate => state.cards.cards\r\n\t)\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\r\n\tconst userID = useSelector<AppRootStateType, string | null>(\r\n\t\tstate => state.profile._id\r\n\t)\r\n\tconst packUserId = useSelector<AppRootStateType, string | null>(\r\n\t\tstate => state.cards.packUserId\r\n\t)\r\n\r\n\tif (!isAuthorized) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\tconst addCardHandler = () => {\r\n\t\tif (addNewCardMode) {\r\n\t\t\tdispatch(\r\n\t\t\t\taddCard(cardsPackID, cardQuestionTextValue, cardAnswerTextValue, {\r\n\t\t\t\t\tpageCount: 100,\r\n\t\t\t\t\tcardsPack_id: cardsPackID,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t\tsetAddNewCardMode(false)\r\n\t\t}\r\n\t\tif (!addNewCardMode && updatingCardId) {\r\n\t\t\tdispatch(\r\n\t\t\t\tupdateCard(\r\n\t\t\t\t\tupdatingCardId,\r\n\t\t\t\t\tcardQuestionTextValue,\r\n\t\t\t\t\tcardAnswerTextValue,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tpageCount: 100,\r\n\t\t\t\t\t\tcardsPack_id: cardsPackID,\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t\tsetUpdateCardMode(false)\r\n\t\t}\r\n\t\tclearNewCardInputsText()\r\n\t}\r\n\tconst onCancelButtonHandler = () => {\r\n\t\tif (updateCardMode) {\r\n\t\t\tsetUpdateCardMode(false)\r\n\t\t\tsetUpdatingCardId(null)\r\n\t\t}\r\n\t\tif (addNewCardMode) {\r\n\t\t\tsetAddNewCardMode(false)\r\n\t\t}\r\n\t\tclearNewCardInputsText()\r\n\t}\r\n\r\n\tconst clearNewCardInputsText = () => {\r\n\t\tsetCardQuestionTextValue('')\r\n\t\tsetCardAnswerTextValue('')\r\n\t\tsetCardQuestionValidateError(undefined)\r\n\t\tsetCardAnswerValidateError(undefined)\r\n\t}\r\n\r\n\tconst onUpdateCartHandler = (\r\n\t\tcardId: string,\r\n\t\tcardQuestion: string,\r\n\t\tcardAnswer: string\r\n\t) => {\r\n\t\tsetAddNewCardMode(false)\r\n\t\tsetUpdateCardMode(true)\r\n\t\tsetUpdatingCardId(cardId)\r\n\t\tsetCardQuestionTextValue(cardQuestion)\r\n\t\tsetCardAnswerTextValue(cardAnswer)\r\n\t}\r\n\r\n\tconst onCardQuestionTextValueHandler = (value: string) => {\r\n\t\tif (value.length <= minCharacterNumber) {\r\n\t\t\tsetCardQuestionValidateError('Mast be more then 2 character')\r\n\t\t} else {\r\n\t\t\tsetCardQuestionValidateError(undefined)\r\n\t\t}\r\n\t\tsetCardQuestionTextValue(value)\r\n\t}\r\n\r\n\tconst onCardAnswerTextValueHandler = (value: string) => {\r\n\t\tif (value.length <= minCharacterNumber) {\r\n\t\t\tsetCardAnswerValidateError('Mast be more then 2 character')\r\n\t\t} else {\r\n\t\t\tsetCardAnswerValidateError(undefined)\r\n\t\t}\r\n\t\tsetCardAnswerTextValue(value)\r\n\t}\r\n\r\n\tconst searchCardsByQuestion = (value: string) => {\r\n\t\tdispatch(changeGetCardsParams({ cardQuestion: value }))\r\n\t}\r\n\tconst searchCardsByAnswer = (value: string) => {\r\n\t\tdispatch(changeGetCardsParams({ cardAnswer: value }))\r\n\t}\r\n\r\n\tconst sortColumn = (name: string) => {\r\n\t\tif (sortCards === `0${name}`) {\r\n\t\t\tdispatch(changeGetCardsParams({ sortCards: `1${name}` }))\r\n\t\t} else {\r\n\t\t\tdispatch(changeGetCardsParams({ sortCards: `0${name}` }))\r\n\t\t}\r\n\t}\r\n\r\n\tconst sortedSign = (name: string) => {\r\n\t\tif (sortCards.slice(1) !== name) {\r\n\t\t\treturn `\\u21C5`\r\n\t\t} else if (sortCards.slice(0, 1) === '0') {\r\n\t\t\treturn `\\u25BC`\r\n\t\t} else {\r\n\t\t\treturn '\\u25B2'\r\n\t\t}\r\n\t}\r\n\r\n\tif (!cardsPackID) {\r\n\t\treturn <Redirect to={'/packs'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.CardsContainer}>\r\n\t\t\t<Search\r\n\t\t\t\thandler={searchCardsByQuestion}\r\n\t\t\t\tplaceholder={'Search question...'}\r\n\t\t\t/>\r\n\t\t\t<Search\r\n\t\t\t\thandler={searchCardsByAnswer}\r\n\t\t\t\tplaceholder={'Search answer...'}\r\n\t\t\t/>\r\n\t\t\t{packUserId === userID && (addNewCardMode || updateCardMode) && (\r\n\t\t\t\t<Modal\r\n\t\t\t\t\tOnBackClick={() => {\r\n\t\t\t\t\t\tsetAddNewCardMode(false)\r\n\t\t\t\t\t\tsetUpdateCardMode(false)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={s.addNewCardBlock}>\r\n\t\t\t\t\t\t<div className={s.addNewCardInput}>\r\n\t\t\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\t\t\tspanClassName={s.errorSpan}\r\n\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\taddNewCardMode\r\n\t\t\t\t\t\t\t\t\t\t? 'enter new card question'\r\n\t\t\t\t\t\t\t\t\t\t: 'enter updating card question'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue={cardQuestionTextValue}\r\n\t\t\t\t\t\t\t\tonChangeText={onCardQuestionTextValueHandler}\r\n\t\t\t\t\t\t\t\terror={cardQuestionValidateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={s.addNewCardInput}>\r\n\t\t\t\t\t\t\t<SuperInputText\r\n\t\t\t\t\t\t\t\tspanClassName={s.errorSpan}\r\n\t\t\t\t\t\t\t\tplaceholder={\r\n\t\t\t\t\t\t\t\t\taddNewCardMode\r\n\t\t\t\t\t\t\t\t\t\t? 'enter new card answer'\r\n\t\t\t\t\t\t\t\t\t\t: 'enter updating card answer'\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvalue={cardAnswerTextValue}\r\n\t\t\t\t\t\t\t\tonChangeText={onCardAnswerTextValueHandler}\r\n\t\t\t\t\t\t\t\terror={cardAnswerValidateError}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<SuperButton\r\n\t\t\t\t\t\t\tdisabled={\r\n\t\t\t\t\t\t\t\t!!cardQuestionValidateError ||\r\n\t\t\t\t\t\t\t\t!!cardAnswerValidateError ||\r\n\t\t\t\t\t\t\t\t!cardQuestionTextValue ||\r\n\t\t\t\t\t\t\t\t!cardAnswerTextValue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={addCardHandler}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{addNewCardMode ? 'Add new Card' : 'Update Card'}\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t\t<SuperButton canceling onClick={onCancelButtonHandler}>\r\n\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t</SuperButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t)}\r\n\t\t\t<SuperButton\r\n\t\t\t\tclassName={s.addNewCardMainButton}\r\n\t\t\t\tonClick={() => setAddNewCardMode(true)}\r\n\t\t\t>\r\n\t\t\t\tAdd New Card\r\n\t\t\t</SuperButton>\r\n\t\t\t<div className={s.Cards}>\r\n\t\t\t\t<div className={s.CardsParams}>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.question} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('question')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tQuestion\r\n\t\t\t\t\t\t<span>{sortedSign('question')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.answer} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('answer')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAnswer\r\n\t\t\t\t\t\t<span>{sortedSign('answer')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.grade} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('grade')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tGrade\r\n\t\t\t\t\t\t<span>{sortedSign('grade')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={`${s.updated} ${s.tableHeader}`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tsortColumn('updated')\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tUpdated\r\n\t\t\t\t\t\t<span>{sortedSign('updated')}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.url}>URL</div>\r\n\t\t\t\t\t<div className={s.actionsWithCard}>Actions</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.CardsContainer}>\r\n\t\t\t\t\t{cards.map((card: CardType) => (\r\n\t\t\t\t\t\t<CardsListItem\r\n\t\t\t\t\t\t\tkey={card._id}\r\n\t\t\t\t\t\t\tcard={card}\r\n\t\t\t\t\t\t\tuserID={userID}\r\n\t\t\t\t\t\t\tonUpdateCartHandler={onUpdateCartHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import { authAPI } from '../m3-dal/api'\r\nimport { AppThunk } from './store'\r\nimport { setProfileData } from './profile-reducer'\r\nimport { setIsAuthorized } from './auth-reducer'\r\n\r\nconst initialState = {\r\n\tstatus: 'idle' as RequestStatusType,\r\n\terror: null as string | null,\r\n\tisInitialized: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: AppActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'APP/SET-APP-ERROR':\r\n\t\tcase 'APP/SET-APP-STATUS':\r\n\t\tcase 'APP/SET-APP-INITIALIZED': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\n//actions\r\nexport const setAppErrorAC = (error: string | null) =>\r\n\t({ type: 'APP/SET-APP-ERROR', payload: { error } } as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) =>\r\n\t({ type: 'APP/SET-APP-STATUS', payload: { status } } as const)\r\nexport const setIsInitialized = (isInitialized: boolean) =>\r\n\t({ type: 'APP/SET-APP-INITIALIZED', payload: { isInitialized } } as const)\r\n\r\n//thunks\r\nexport const initializeAppTC = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(setAppStatusAC('loading'))\r\n\t\tconst res = await authAPI.getMe()\r\n\t\tconst { _id, avatar, name, email, publicCardPacksCount, verified } =\r\n\t\t\tres.data\r\n\t\tdispatch(\r\n\t\t\tsetProfileData({\r\n\t\t\t\t_id,\r\n\t\t\t\tavatar,\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\tpublicCardPacksCount,\r\n\t\t\t\tverified,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(setIsAuthorized(true))\r\n\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t} catch (e: any) {\r\n\t\tif (e.response) {\r\n\t\t\tdispatch(setAppErrorAC(e.response.data.error))\r\n\t\t\tdispatch(setAppStatusAC('failed'))\r\n\t\t}\r\n\t} finally {\r\n\t\tdispatch(setIsInitialized(true))\r\n\t}\r\n}\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type AppActionsType =\r\n\t| ReturnType<typeof setAppErrorAC>\r\n\t| ReturnType<typeof setAppStatusAC>\r\n\t| ReturnType<typeof setIsInitialized>\r\n","import React, { useEffect, useState } from 'react'\r\nimport SuperRadio from '../../../../n1-main/m1-ui/common/SuperRadio/SuperRadio'\r\nimport style from './CardsLearningItem.module.css'\r\nimport SuperButton from '../../../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\n\r\ntype PropsType = {\r\n\tquestion: string\r\n\tanswer: string\r\n\tgetNextCard: (grade: number) => void\r\n}\r\n\r\nconst CardsLearningItem = (props: PropsType) => {\r\n\tconst grades = [\r\n\t\t'–Ω–µ –∑–Ω–∞–ª —Å–æ–≤—Å–µ–º',\r\n\t\t'—Å–ª—ã—à–∞–ª –Ω–æ –Ω–µ –∑–Ω–∞–ª',\r\n\t\t'–ø–ª–æ—Ö–æ –∑–Ω–∞–ª',\r\n\t\t'–∑–Ω–∞–ª –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞',\r\n\t\t'–∑–Ω–∞–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é',\r\n\t]\r\n\tconst { question, answer, getNextCard } = props\r\n\r\n\tconst [gradeNumber, setGradeNumber] = useState<number | null>(null)\r\n\tconst [checkedGradeValue, setCheckedGradeValue] = useState(grades[0])\r\n\tconst [showAnswer, setShowAnswer] = useState(false)\r\n\r\n\tconst changeGrade = (chosenGrade: string) => {\r\n\t\tsetGradeNumber(grades.indexOf(chosenGrade))\r\n\t\tsetCheckedGradeValue(chosenGrade)\r\n\t}\r\n\r\n\tconst onNextCardClick = () => {\r\n\t\tif (gradeNumber !== null) {\r\n\t\t\tgetNextCard(gradeNumber)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCheckedGradeValue(grades[0])\r\n\t\tsetGradeNumber(null)\r\n\t}, [question, answer])\r\n\r\n\tconst classNameIfHidden = showAnswer ? '' : style.hidden\r\n\r\n\treturn (\r\n\t\t<div className={style.container}>\r\n\t\t\t<div className={`${style.questionBlock}`}>Question: {question}</div>\r\n\t\t\t<SuperButton onClick={() => setShowAnswer((prev: boolean) => !prev)}>\r\n\t\t\t\t{showAnswer ? 'Hide Answer' : 'Show Answer'}\r\n\t\t\t</SuperButton>\r\n\t\t\t<div className={`${classNameIfHidden} ${style.answerBlock}`}>\r\n\t\t\t\tAnswer: {answer}\r\n\t\t\t</div>\r\n\t\t\t<div className={`${classNameIfHidden} ${style.radiosBlock}`}>\r\n\t\t\t\t<SuperRadio\r\n\t\t\t\t\tclassName={classNameIfHidden}\r\n\t\t\t\t\toptions={grades}\r\n\t\t\t\t\tonChangeOption={changeGrade}\r\n\t\t\t\t\tvalue={checkedGradeValue}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<SuperButton\r\n\t\t\t\tclassName={classNameIfHidden}\r\n\t\t\t\tdisabled={gradeNumber === null}\r\n\t\t\t\tonClick={onNextCardClick}\r\n\t\t\t>\r\n\t\t\t\tNext\r\n\t\t\t</SuperButton>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardsLearningItem\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Redirect, useParams } from 'react-router-dom'\r\nimport {\r\n\tCardType,\r\n\tclearCardsData,\r\n\tgetCardsTC,\r\n\tgradeCard,\r\n} from '../../../n1-main/m2-bll/—Åards-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../../n1-main/m2-bll/store'\r\nimport CardsLearningItem from './CardsLearningItem/CardsLearningItem'\r\nimport styles from './CardsLearningContainer.module.css'\r\nimport SuperButton from '../../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\n\r\nconst CardsLearningContainer = () => {\r\n\tconst [currentCardQuestion, setCurrentCardQuestion] = useState('')\r\n\tconst [currentCardAnswer, setCurrentCardAnswer] = useState('')\r\n\tconst [currentCardId, setCurrentCardId] = useState('')\r\n\tconst [redirectToPacks, setRedirectToPacks] = useState(false)\r\n\r\n\tconst maxCards = 1000\r\n\tconst dispatch = useDispatch()\r\n\tconst { cardsPackID } = useParams<{ cardsPackID: string }>()\r\n\tconst cards = useSelector<AppRootStateType, Array<CardType>>(\r\n\t\tstate => state.cards.cards\r\n\t)\r\n\r\n\tconst getNextCard = () => {\r\n\t\tif (cards[0]) {\r\n\t\t\tconst idsByGradeArr = cards.reduce((acc: string[], card) => {\r\n\t\t\t\tconst arr = Array(Math.round((6 - card.grade) ** 3)).fill(card._id)\r\n\t\t\t\treturn [...acc, ...arr]\r\n\t\t\t}, [])\r\n\t\t\tconst randomCardId =\r\n\t\t\t\tidsByGradeArr[Math.floor(Math.random() * idsByGradeArr.length)]\r\n\t\t\tconst randomCard = cards.find(card => randomCardId === card._id)\r\n\t\t\tif (randomCard) {\r\n\t\t\t\tsetCurrentCardQuestion(randomCard.question)\r\n\t\t\t\tsetCurrentCardAnswer(randomCard.answer)\r\n\t\t\t\tsetCurrentCardId(randomCard._id)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetNextCard()\r\n\t}, [cards])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (cardsPackID) {\r\n\t\t\tdispatch(\r\n\t\t\t\tgetCardsTC({ cardsPack_id: cardsPackID, pageCount: maxCards })\r\n\t\t\t)\r\n\t\t\treturn () => {\r\n\t\t\t\tdispatch(clearCardsData())\r\n\t\t\t}\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst getNextCardHandler = (gradeNamber: number) => {\r\n\t\tdispatch(gradeCard(cardsPackID, currentCardId, gradeNamber))\r\n\t}\r\n\r\n\tconst backToPacksHandler = () => {\r\n\t\tsetRedirectToPacks(true)\r\n\t}\r\n\r\n\tif (redirectToPacks) {\r\n\t\treturn <Redirect to={'/packs'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.container}>\r\n\t\t\t{cards[0] ? (\r\n\t\t\t\t<CardsLearningItem\r\n\t\t\t\t\tquestion={currentCardQuestion}\r\n\t\t\t\t\tanswer={currentCardAnswer}\r\n\t\t\t\t\tgetNextCard={getNextCardHandler}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div>No cards in this pack</div>\r\n\t\t\t\t\t<SuperButton onClick={backToPacksHandler}>\r\n\t\t\t\t\t\tGo Back To Packs\r\n\t\t\t\t\t</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardsLearningContainer\r\n","import React, { useEffect } from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport styles from './App.module.css'\r\nimport Test from '../../../n2-features/f0-test/Test'\r\nimport Header from '../header/Header'\r\nimport Auth from '../../../n2-features/f1-auth/Auth'\r\nimport Registration from '../../../n2-features/f2-registration/Registration'\r\nimport Profile from '../../../n2-features/f3-profile/Profile'\r\nimport Error404 from '../../../n2-features/f6-404/Error404'\r\nimport PasswordRecovery from '../../../n2-features/f4-passwordRecovery/PasswordRecovery'\r\nimport NewPassword from '../../../n2-features/f5-newPassword/NewPassword'\r\nimport { Packs } from '../../../n2-features/f7-packs/Packs'\r\nimport { Cards } from '../../../n2-features/f8-cards/Cards'\r\nimport { initializeAppTC, RequestStatusType } from '../../m2-bll/app-reducer'\r\nimport { AppRootStateType } from '../../m2-bll/store'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../common/Loader/Loader'\r\nimport CardsLearningContainer from '../../../n2-features/f8-cards/CardsLearning/CardsLearningContainer'\r\n\r\nconst App = () => {\r\n\tconst status = useSelector<AppRootStateType, RequestStatusType>(\r\n\t\tstate => state.app.status\r\n\t)\r\n\tconst isInitialized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.app.isInitialized\r\n\t)\r\n\tconst dispatch = useDispatch()\r\n\tuseEffect(() => {\r\n\t\tdispatch(initializeAppTC())\r\n\t}, [])\r\n\r\n\tconst loader = (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'fixed',\r\n\t\t\t\ttop: '30%',\r\n\t\t\t\ttextAlign: 'center',\r\n\t\t\t\twidth: '100%',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Loader />\r\n\t\t</div>\r\n\t)\r\n\r\n\tif (!isInitialized) {\r\n\t\treturn loader\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t{status === 'loading' && loader}\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={'/'} render={() => <div>Home</div>} />\r\n\t\t\t\t\t<Route exact path={'/login'} render={() => <Auth />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/registration'}\r\n\t\t\t\t\t\trender={() => <Registration />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path={'/profile'} render={() => <Profile />} />\r\n\t\t\t\t\t<Route exact path={'/404'} render={() => <Error404 />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/password/recovery'}\r\n\t\t\t\t\t\trender={() => <PasswordRecovery />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/password/new/:token?'}\r\n\t\t\t\t\t\trender={() => <NewPassword />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path={'/test'} render={() => <Test />} />\r\n\t\t\t\t\t<Route path={'/packs'} render={() => <Packs />} />\r\n\t\t\t\t\t<Route path={`/cards/:cardsPackID?`} render={() => <Cards />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath={`/learn/:cardsPackID?`}\r\n\t\t\t\t\t\trender={() => <CardsLearningContainer />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Redirect from={'*'} to={'/404'} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\r\nimport {\r\n\tNewPasswordActionsType,\r\n\tnewPasswordReducer,\r\n} from './newPassword-reducer'\r\nimport {\r\n\tRegistrationActionsType,\r\n\tregistrationReducer,\r\n} from './registration-reducer'\r\nimport { AuthActionsType, authReducer } from './auth-reducer'\r\nimport { ProfileActionsType, profileReducer } from './profile-reducer'\r\nimport {\r\n\tPasswordRecoveryActionsType,\r\n\tpasswordRecoveryReducer,\r\n} from './passwordRecovery-reducer'\r\nimport { cardsReducer, CardsActionType } from './—Åards-reducer'\r\nimport { AppActionsType, appReducer } from './app-reducer'\r\nimport { PacksActionType, packsReducer } from './packs-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\tapp: appReducer,\r\n\tauth: authReducer,\r\n\tnewPassword: newPasswordReducer,\r\n\tregistration: registrationReducer,\r\n\tprofile: profileReducer,\r\n\tpasswordRecovery: passwordRecoveryReducer,\r\n\tcards: cardsReducer,\r\n\tpacks: packsReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n// —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ store –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n//types\r\n//—Ç–∏–ø –≤—Å–µ–≥–æ —Å—Ç–µ–π—Ç–∞\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n//—Ç–∏–ø –≤—Å–µ—Ö —ç–∫—à–µ–Ω–æ–≤ –∏–∑ –≤—Å–µ—Ö —Ä–µ–¥—å—é—Å–µ—Ä–æ–≤\r\nexport type AppRootActionsType =\r\n\t| NewPasswordActionsType\r\n\t| AuthActionsType\r\n\t| RegistrationActionsType\r\n\t| ProfileActionsType\r\n\t| PasswordRecoveryActionsType\r\n\t| AppActionsType\r\n\t| CardsActionType\r\n\t| PacksActionType\r\n//–æ–±—â–∏–π —Ç–∏–ø –¥–ª—è –≤—Å–µ—Ö —Å–∞–Ω–æ–∫\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n\tReturnType,\r\n\tAppRootStateType,\r\n\tunknown,\r\n\tAppRootActionsType\r\n>\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './n1-main/m1-ui/App/App'\r\nimport { HashRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './n1-main/m2-bll/store'\r\n\r\nReactDOM.render(\r\n\t<HashRouter>\r\n\t\t<Provider store={store}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</HashRouter>,\r\n\tdocument.getElementById('root')\r\n)\r\n"],"sourceRoot":""}