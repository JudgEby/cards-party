{"version":3,"sources":["n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/SuperRadio/SuperRadio.module.css","n1-main/m1-ui/common/SuperSelect/SuperSelect.module.css","n1-main/m1-ui/App/App.module.css","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.module.css","n1-main/m1-ui/common/SuperRange/SuperRange.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/SuperRadio/SuperRadio.tsx","n1-main/m1-ui/common/SuperRange/SuperRange.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n2-features/f0-test/Test.tsx","n1-main/m1-ui/header/Header.tsx","n2-features/f1-auth/Auth.tsx","n2-features/f2-registration/Registration.tsx","n2-features/f3-profile/Profile.tsx","n2-features/f6-404/Error404.tsx","n2-features/f4-passwordRecovery/PasswordRecovery.tsx","n2-features/f5-newPassword/NewPassword.tsx","n1-main/m1-ui/App/App.tsx","n1-main/m3-dal/newPassword-reducer.ts","n1-main/m3-dal/registration-reducer.ts","n1-main/m2-bll/auth-reducer.ts","n1-main/m3-dal/profile-reducer.ts","n1-main/m3-dal/passwordRecovery-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","styles","superSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","target","mappedOptions","map","o","i","style","label","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","option","select","Test","placeholder","Header","header","to","Auth","Registration","Profile","Error404","PasswordRecovery","NewPassword","App","container","exact","path","render","from","initialState","rootReducer","combineReducers","auth","state","action","newPassword","registration","profile","passwordRecovery","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.356b73dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3VOuJ\",\"red\":\"SuperButton_red__2deN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3E8nS\",\"spanClassName\":\"SuperCheckbox_spanClassName__30TFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1EjAt\",\"errorInput\":\"SuperInputText_errorInput__3PmNA\",\"error\":\"SuperInputText_error__2wF7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__P5Y57\",\"label\":\"SuperRadio_label__2NlIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1VUYg\",\"option\":\"SuperSelect_option__SSz08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2rlk7\",\"container\":\"App_container__WwTbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__1kEcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2sHEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__PIB1Q\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n  return (\n    <label>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter && // если есть пропс onEnter\n      e.key === \"Enter\" && // и если нажата кнопка Enter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  const finalInputClassName = `${s.errorInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n\nexport default SuperInputText;\n","import React, {\n\tDetailedHTMLProps,\n\tInputHTMLAttributes,\n\tHTMLAttributes,\n\tuseState,\n} from 'react'\nimport SuperInputText from '../SuperInputText/SuperInputText'\n\nimport styles from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n\tInputHTMLAttributes<HTMLInputElement>,\n\tHTMLInputElement\n>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<\n\tHTMLAttributes<HTMLSpanElement>,\n\tHTMLSpanElement\n>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n\t// и + ещё пропсы которых нет в стандартном инпуте\n\tonChangeText?: (value: string) => void\n\tonEnter?: () => void\n\terror?: string\n\tspanClassName?: string\n\n\tspanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n\tautoFocus, // игнорировать изменение этого пропса\n\tonBlur,\n\tonEnter,\n\tspanProps,\n\n\t...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n\tconst [editMode, setEditMode] = useState<boolean>(false)\n\tconst { children, onDoubleClick, className, ...restSpanProps } =\n\t\tspanProps || {}\n\n\tconst onEnterCallback = () => {\n\t\t// setEditMode() // выключить editMode при нажатии Enter\n\t\tsetEditMode(false)\n\t\tonEnter && onEnter()\n\t}\n\tconst onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\t// setEditMode() // выключить editMode при нажатии за пределами инпута\n\t\tsetEditMode(false)\n\t\tonBlur && onBlur(e)\n\t}\n\tconst onDoubleClickCallBack = (\n\t\te: React.MouseEvent<HTMLSpanElement, MouseEvent>\n\t) => {\n\t\t// setEditMode() // включить editMode при двойном клике\n\t\tsetEditMode(true)\n\t\tonDoubleClick && onDoubleClick(e)\n\t}\n\n\tconst spanClassName = `${styles.superSpan} ${className}`\n\n\treturn (\n\t\t<>\n\t\t\t{editMode ? (\n\t\t\t\t<SuperInputText\n\t\t\t\t\tautoFocus // пропсу с булевым значением не обязательно указывать true\n\t\t\t\t\tonBlur={onBlurCallback}\n\t\t\t\t\tonEnter={onEnterCallback}\n\t\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<span\n\t\t\t\t\tonDoubleClick={onDoubleClickCallBack}\n\t\t\t\t\tclassName={spanClassName}\n\t\t\t\t\t{...restSpanProps}\n\t\t\t\t>\n\t\t\t\t\t{/*если нет захардкодженного текста для спана, то значение инпута*/}\n\t\t\t\t\t{children || restProps.value}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default SuperEditableSpan\n","import React, {\n  ChangeEvent,\n  InputHTMLAttributes,\n  DetailedHTMLProps,\n} from 'react'\nimport style from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <label key={name + '-' + i} className={style.label}>\n          <input\n            type={'radio'}\n            className={style.radio}\n            checked={o === value}\n            value={o}\n            onChange={(e) => onChangeCallback(e)}\n            name={name}\n          />\n          {o}\n        </label>\n      ))\n    : []\n\n  return <>{mappedOptions}</>\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from 'react'\n\nimport style from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <option key={`${o}-${i}`} value={o} className={style.option}>\n          {o}\n        </option>\n      ))\n    : [] // map options with key\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  return (\n    <select className={style.select} onChange={onChangeCallback} {...restProps}>\n      {mappedOptions}\n    </select>\n  )\n}\n\nexport default SuperSelect\n","import React from 'react'\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\nimport SuperCheckbox from '../../n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox'\nimport SuperEditableSpan from '../../n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan'\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\nimport SuperRadio from '../../n1-main/m1-ui/common/SuperRadio/SuperRadio'\nimport SuperRange from '../../n1-main/m1-ui/common/SuperRange/SuperRange'\nimport SuperSelect from '../../n1-main/m1-ui/common/SuperSelect/SuperSelect'\n\nconst Test = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<SuperButton>Ya est SuperButton</SuperButton>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperCheckbox>Ya est SuperCheckbox</SuperCheckbox>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperEditableSpan value={'value'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperInputText placeholder={'Ya est SuperInputText'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRadio\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRange value={10} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperSelect\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Test\n","import React from 'react'\nimport styles from './Header.module.css'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => {\n\treturn (\n\t\t<header className={styles.header}>\n\t\t\t<NavLink to={'/'}>Home</NavLink>\n\t\t\t<NavLink to={'/login'}>Login</NavLink>\n\t\t\t<NavLink to={'/registration'}>Registration</NavLink>\n\t\t\t<NavLink to={'/profile'}>Profile</NavLink>\n\t\t\t<NavLink to={'/404'}>404</NavLink>\n\t\t\t<NavLink to={'/password/recovery'}>Password Recovery</NavLink>\n\t\t\t<NavLink to={'/password/new'}>New Password</NavLink>\n\t\t\t<NavLink to={'/test'}>Test</NavLink>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\n\nconst Auth = () => {\n\treturn <div>Auth</div>\n}\n\nexport default Auth\n","import React from 'react'\n\nconst Registration = () => {\n\treturn <div>Registration</div>\n}\n\nexport default Registration\n","import React from 'react'\n\nconst Profile = () => {\n\treturn <div>Profile</div>\n}\n\nexport default Profile\n","import React from 'react'\n\nconst Error404 = () => {\n\treturn <div>404</div>\n}\n\nexport default Error404\n","import React from 'react'\n\nconst PasswordRecovery = () => {\n\treturn <div>PasswordRecovery</div>\n}\n\nexport default PasswordRecovery\n","import React from 'react'\n\nconst NewPassword = () => {\n\treturn <div>NewPassword</div>\n}\n\nexport default NewPassword\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport styles from './App.module.css'\nimport Test from '../../../n2-features/f0-test/Test'\nimport Header from '../header/Header'\nimport Auth from '../../../n2-features/f1-auth/Auth'\nimport Registration from '../../../n2-features/f2-registration/Registration'\nimport Profile from '../../../n2-features/f3-profile/Profile'\nimport Error404 from '../../../n2-features/f6-404/Error404'\nimport PasswordRecovery from '../../../n2-features/f4-passwordRecovery/PasswordRecovery'\nimport NewPassword from '../../../n2-features/f5-newPassword/NewPassword'\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<div className={styles.container}>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path={'/'} render={() => <div>Home</div>} />\n\t\t\t\t\t<Route exact path={'/login'} render={() => <Auth />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath={'/registration'}\n\t\t\t\t\t\trender={() => <Registration />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path={'/profile'} render={() => <Profile />} />\n\t\t\t\t\t<Route exact path={'/404'} render={() => <Error404 />} />\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath={'/password/recovery'}\n\t\t\t\t\t\trender={() => <PasswordRecovery />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath={'/password/new'}\n\t\t\t\t\t\trender={() => <NewPassword />}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route exact path={'/test'} render={() => <Test />} />\n\t\t\t\t\t<Redirect from={'*'} to={'/404'} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { AppThunk } from '../m2-bll/store'\n\nconst initialState = {}\ntype InitialStateType = typeof initialState\n\nexport const newPasswordReducer = (\n\tstate: InitialStateType = initialState,\n\taction: NewPasswordActionsType\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'TEST':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// actions\nconst test = () => ({ type: 'TEST' } as const)\n// thunks\nexport const testTC = (): AppThunk => dispatch => {\n\tdispatch(test())\n}\n\n// types\nexport type NewPasswordActionsType = ReturnType<typeof test>\n","import { AppThunk } from '../m2-bll/store'\n\nconst initialState = {}\ntype InitialStateType = typeof initialState\n\nexport const registrationReducer = (\n\tstate: InitialStateType = initialState,\n\taction: RegistrationActionsType\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'TEST':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// actions\nconst test = () => ({ type: 'TEST' } as const)\n// thunks\nexport const testTC = (): AppThunk => dispatch => {\n\tdispatch(test())\n}\n// types\n\nexport type RegistrationActionsType = ReturnType<typeof test>\n","import { AppThunk } from './store'\n\nconst initialState = {}\ntype InitialStateType = typeof initialState\n\nexport const authReducer = (\n\tstate: InitialStateType = initialState,\n\taction: AuthActionsType\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'TEST':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// actions\nconst test = () => ({ type: 'TEST' } as const)\n// thunks\nexport const testTC = (): AppThunk => dispatch => {\n\tdispatch(test())\n}\n// types\n\nexport type AuthActionsType = ReturnType<typeof test>\n","import { AppThunk } from '../m2-bll/store'\n\nconst initialState = {}\ntype InitialStateType = typeof initialState\n\nexport const profileReducer = (\n\tstate: InitialStateType = initialState,\n\taction: ProfileActionsType\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'TEST':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// actions\nconst test = () => ({ type: 'TEST' } as const)\n// thunks\nexport const testTC = (): AppThunk => dispatch => {\n\tdispatch(test())\n}\n// types\n\nexport type ProfileActionsType = ReturnType<typeof test>\n","import { AppThunk } from '../m2-bll/store'\n\nconst initialState = {}\ntype InitialStateType = typeof initialState\n\nexport const passwordRecoveryReducer = (\n\tstate: InitialStateType = initialState,\n\taction: PasswordRecoveryActionsType\n): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'TEST':\n\t\t\treturn state\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n// actions\nconst test = () => ({ type: 'TEST' } as const)\n// thunks\nexport const testTC = (): AppThunk => dispatch => {\n\tdispatch(test())\n}\n// types\n\nexport type PasswordRecoveryActionsType = ReturnType<typeof test>\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport {\n\tNewPasswordActionsType,\n\tnewPasswordReducer,\n} from '../m3-dal/newPassword-reducer'\nimport {\n\tRegistrationActionsType,\n\tregistrationReducer,\n} from '../m3-dal/registration-reducer'\nimport { AuthActionsType, authReducer } from './auth-reducer'\nimport { ProfileActionsType, profileReducer } from '../m3-dal/profile-reducer'\nimport {\n\tPasswordRecoveryActionsType,\n\tpasswordRecoveryReducer,\n} from '../m3-dal/passwordRecovery-reducer'\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tnewPassword: newPasswordReducer,\n\tregistration: registrationReducer,\n\tprofile: profileReducer,\n\tpasswordRecovery: passwordRecoveryReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n// чтобы можно было в консоли браузера обращаться к store в любой момент\n// @ts-ignore\nwindow.store = store\n\n//types\n//тип всего стейта\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n//тип всех экшенов из всех редьюсеров\nexport type AppRootActionsType =\n\t| NewPasswordActionsType\n\t| AuthActionsType\n\t| RegistrationActionsType\n\t| ProfileActionsType\n\t| PasswordRecoveryActionsType\n//общий тип для всех санок\nexport type AppThunk<ReturnType = void> = ThunkAction<\n\tReturnType,\n\tAppRootStateType,\n\tunknown,\n\tAppRootActionsType\n>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './n1-main/m1-ui/App/App'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './n1-main/m2-bll/store'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}