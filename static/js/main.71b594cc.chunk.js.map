{"version":3,"sources":["n2-features/f2-registration/Registration.module.css","n2-features/f4-passwordRecovery/PasswordRecovery.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.module.css","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.module.css","n1-main/m1-ui/common/SuperInputText/SuperInputText.module.css","n1-main/m1-ui/common/SuperRadio/SuperRadio.module.css","n1-main/m1-ui/common/SuperSelect/SuperSelect.module.css","n1-main/m1-ui/App/App.module.css","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.module.css","n1-main/m1-ui/common/SuperRange/SuperRange.module.css","n1-main/m1-ui/common/Loader/Loader.module.css","n2-features/f3-profile/Profile.module.css","n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/common/SuperButton/SuperButton.tsx","n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox.tsx","n1-main/m1-ui/common/SuperInputText/SuperInputText.tsx","n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan.tsx","n1-main/m1-ui/common/SuperRadio/SuperRadio.tsx","n1-main/m1-ui/common/SuperRange/SuperRange.tsx","n1-main/m1-ui/common/SuperSelect/SuperSelect.tsx","n2-features/f0-test/Test.tsx","n1-main/m3-dal/api.ts","n1-main/m2-bll/profile-reducer.ts","n1-main/m2-bll/auth-reducer.ts","Media/menu/menu.png","n1-main/m1-ui/header/Header.tsx","n2-features/f1-auth/Auth.tsx","n1-main/m2-bll/registration-reducer.ts","n1-main/m1-ui/common/Loader/Loader.tsx","n2-features/f2-registration/Registration.tsx","n2-features/f3-profile/Profile.tsx","n2-features/f6-404/Error404.tsx","n1-main/m2-bll/passwordRecovery-reducer.ts","n2-features/f4-passwordRecovery/PasswordRecovery.tsx","n1-main/m2-bll/newPassword-reducer.ts","n2-features/f5-newPassword/NewPassword.tsx","n1-main/m1-ui/App/App.tsx","n1-main/m2-bll/store.ts","index.tsx","n2-features/f1-auth/Auth.module.css"],"names":["module","exports","SuperButton","red","className","restProps","finalClassName","s","default","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","onDoubleClick","restSpanProps","styles","superSpan","SuperRadio","name","options","onChangeOption","onChangeCallback","target","mappedOptions","map","o","i","style","label","radio","SuperRange","onChangeRange","finalRangeClassName","range","SuperSelect","option","select","Test","placeholder","instance","axios","create","baseURL","withCredentials","authAPI","post","loginData","delete","email","password","from","message","resetPasswordToken","initialState","_id","avatar","publicCardPacksCount","verified","setProfile","data","payload","setProfileData","dispatch","isAuthorized","isLoading","Login","setIsLoading","Header","useDispatch","useSelector","state","auth","header","to","link","activeClassName","active","onClick","a","src","menu","block","alt","Auth","setEmail","setPassword","rememberMe","setRememberMe","useEffect","res","onSubmit","then","catch","response","err","LoginTC","authPageContainer","login","emailPasswordLoginContainer","recoveryContainer","recovery","loginButtonContainer","loginButton","disabled","signUpContainer","account","SignUpContainer","SignUp","isRegistered","setError","Loader","ldsEllipsis","Registration","setLogin","checkPassword","setCheckPassword","registration","preventDefault","registerTC","registrationContainer","inputFields","button","btnCancelRegister","Profile","profile","background","Error404","recoveryError","recoverySendSuccess","setRecoveryError","setRecoverySendSuccess","sendPasswordRecovery","PasswordRecovery","passwordRecovery","inputValue","setInputValue","passwordRecoveryContainer","inputField","onKeyDown","positionBtn","sendButton","color","footerBtn","newPasswordSendingSuccess","newPasswordSendingError","setNewPasswordSendingSuccess","setNewPasswordSendingError","NewPassword","newPassword","newPasswordValue","setNewPasswordValue","confirmPasswordValue","setConfirmPasswordValue","isPasswordsMatch","setIsPasswordsMatch","isPasswordValid","setIsPasswordValid","token","useParams","onChangeInputHandler","length","confirmPassword","App","container","exact","path","render","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b594cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationContainer\":\"Registration_registrationContainer__2kTeu\",\"inputFields\":\"Registration_inputFields__UMhdC\",\"button\":\"Registration_button__1tQUU\",\"btnCancelRegister\":\"Registration_btnCancelRegister__31SLz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passwordRecoveryContainer\":\"PasswordRecovery_passwordRecoveryContainer__1Gjmv\",\"inputField\":\"PasswordRecovery_inputField__Xkeb2\",\"sendButton\":\"PasswordRecovery_sendButton__1dSp3\",\"positionBtn\":\"PasswordRecovery_positionBtn__haYvE\",\"footerBtn\":\"PasswordRecovery_footerBtn__Bszkj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3VOuJ\",\"red\":\"SuperButton_red__2deN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3E8nS\",\"spanClassName\":\"SuperCheckbox_spanClassName__30TFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1EjAt\",\"errorInput\":\"SuperInputText_errorInput__3PmNA\",\"error\":\"SuperInputText_error__2wF7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"SuperRadio_radio__P5Y57\",\"label\":\"SuperRadio_label__2NlIF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"SuperSelect_select__1VUYg\",\"option\":\"SuperSelect_option__SSz08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2rlk7\",\"container\":\"App_container__WwTbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superSpan\":\"SuperEditableSpan_superSpan__1kEcJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"range\":\"SuperRange_range__2sHEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"Loader_ldsEllipsis__3Hzfn\",\"ldsEllipsis1\":\"Loader_ldsEllipsis1__7UqJi\",\"ldsEllipsis2\":\"Loader_ldsEllipsis2__1bWJz\",\"ldsEllipsis3\":\"Loader_ldsEllipsis3__1dsx5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Profile_avatar__2gmDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__PIB1Q\",\"block\":\"Header_block__3XSDT\",\"link\":\"Header_link__HvP0l\",\"active\":\"Header_active__3jTvK\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n  return (\n    <label>\n      <input\n        type={\"checkbox\"}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n","import React, {\n  ChangeEvent,\n  DetailedHTMLProps,\n  InputHTMLAttributes,\n  KeyboardEvent,\n} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n  // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter && // если есть пропс onEnter\n      e.key === \"Enter\" && // и если нажата кнопка Enter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n  const finalInputClassName = `${s.errorInput} ${className ? className : \"\"}`; // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={\"text\"}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  );\n};\n\nexport default SuperInputText;\n","import React, {\n\tDetailedHTMLProps,\n\tInputHTMLAttributes,\n\tHTMLAttributes,\n\tuseState,\n} from 'react'\nimport SuperInputText from '../SuperInputText/SuperInputText'\n\nimport styles from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<\n\tInputHTMLAttributes<HTMLInputElement>,\n\tHTMLInputElement\n>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<\n\tHTMLAttributes<HTMLSpanElement>,\n\tHTMLSpanElement\n>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & {\n\t// и + ещё пропсы которых нет в стандартном инпуте\n\tonChangeText?: (value: string) => void\n\tonEnter?: () => void\n\terror?: string\n\tspanClassName?: string\n\n\tspanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = ({\n\tautoFocus, // игнорировать изменение этого пропса\n\tonBlur,\n\tonEnter,\n\tspanProps,\n\n\t...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n\tconst [editMode, setEditMode] = useState<boolean>(false)\n\tconst { children, onDoubleClick, className, ...restSpanProps } =\n\t\tspanProps || {}\n\n\tconst onEnterCallback = () => {\n\t\t// setEditMode() // выключить editMode при нажатии Enter\n\t\tsetEditMode(false)\n\t\tonEnter && onEnter()\n\t}\n\tconst onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\t// setEditMode() // выключить editMode при нажатии за пределами инпута\n\t\tsetEditMode(false)\n\t\tonBlur && onBlur(e)\n\t}\n\tconst onDoubleClickCallBack = (\n\t\te: React.MouseEvent<HTMLSpanElement, MouseEvent>\n\t) => {\n\t\t// setEditMode() // включить editMode при двойном клике\n\t\tsetEditMode(true)\n\t\tonDoubleClick && onDoubleClick(e)\n\t}\n\n\tconst spanClassName = `${styles.superSpan} ${className}`\n\n\treturn (\n\t\t<>\n\t\t\t{editMode ? (\n\t\t\t\t<SuperInputText\n\t\t\t\t\tautoFocus // пропсу с булевым значением не обязательно указывать true\n\t\t\t\t\tonBlur={onBlurCallback}\n\t\t\t\t\tonEnter={onEnterCallback}\n\t\t\t\t\t{...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<span\n\t\t\t\t\tonDoubleClick={onDoubleClickCallBack}\n\t\t\t\t\tclassName={spanClassName}\n\t\t\t\t\t{...restSpanProps}\n\t\t\t\t>\n\t\t\t\t\t{/*если нет захардкодженного текста для спана, то значение инпута*/}\n\t\t\t\t\t{children || restProps.value}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nexport default SuperEditableSpan\n","import React, {\n  ChangeEvent,\n  InputHTMLAttributes,\n  DetailedHTMLProps,\n} from 'react'\nimport style from './SuperRadio.module.css'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<\n  InputHTMLAttributes<HTMLInputElement>,\n  HTMLInputElement\n>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = ({\n  type,\n  name,\n  options,\n  value,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <label key={name + '-' + i} className={style.label}>\n          <input\n            type={'radio'}\n            className={style.radio}\n            checked={o === value}\n            value={o}\n            onChange={(e) => onChangeCallback(e)}\n            name={name}\n          />\n          {o}\n        </label>\n      ))\n    : []\n\n  return <>{mappedOptions}</>\n}\n\nexport default SuperRadio\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperRange.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperRangePropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeRange?: (value: number) => void\n};\n\nconst SuperRange: React.FC<SuperRangePropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeRange,\n        className,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e) // сохраняем старую функциональность\n\n        onChangeRange && onChangeRange(+e.currentTarget.value)\n    }\n\n    const finalRangeClassName = `${s.range} ${className ? className : ''}`\n\n    return (\n        <>\n            <input\n                type={'range'}\n                onChange={onChangeCallback}\n                className={finalRangeClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n        </>\n    )\n}\n\nexport default SuperRange\n","import React, {\n  SelectHTMLAttributes,\n  DetailedHTMLProps,\n  ChangeEvent,\n} from 'react'\n\nimport style from './SuperSelect.module.css'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<\n  SelectHTMLAttributes<HTMLSelectElement>,\n  HTMLSelectElement\n>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n  options?: any[]\n  onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = ({\n  options,\n  onChange,\n  onChangeOption,\n  ...restProps\n}) => {\n  const mappedOptions: any[] = options\n    ? options.map((o, i) => (\n        <option key={`${o}-${i}`} value={o} className={style.option}>\n          {o}\n        </option>\n      ))\n    : [] // map options with key\n\n  const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n    // onChange, onChangeOption\n    onChangeOption && onChangeOption(e.target.value)\n    onChange && onChange(e)\n  }\n\n  return (\n    <select className={style.select} onChange={onChangeCallback} {...restProps}>\n      {mappedOptions}\n    </select>\n  )\n}\n\nexport default SuperSelect\n","import React from 'react'\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\nimport SuperCheckbox from '../../n1-main/m1-ui/common/SuperCheckbox/SuperCheckbox'\nimport SuperEditableSpan from '../../n1-main/m1-ui/common/SuperEditableSpan/SuperEditableSpan'\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\nimport SuperRadio from '../../n1-main/m1-ui/common/SuperRadio/SuperRadio'\nimport SuperRange from '../../n1-main/m1-ui/common/SuperRange/SuperRange'\nimport SuperSelect from '../../n1-main/m1-ui/common/SuperSelect/SuperSelect'\n\nconst Test = () => {\n\treturn (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<SuperButton>Ya est SuperButton</SuperButton>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperCheckbox>Ya est SuperCheckbox</SuperCheckbox>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperEditableSpan value={'value'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperInputText placeholder={'Ya est SuperInputText'} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRadio\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperRange value={10} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<SuperSelect\n\t\t\t\t\tname={'Ya est SuperInputText'}\n\t\t\t\t\toptions={['raz', 'dva', 'tri']}\n\t\t\t\t\tvalue={'dva'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Test\n","import axios from 'axios'\nimport { loginDataType } from '../m2-bll/auth-reducer'\n\nconst instance2 = axios.create({\n\tbaseURL: 'http://localhost:7542/2.0/',\n\twithCredentials: true,\n})\n\nconst instance = axios.create({\n\tbaseURL: 'https://neko-back.herokuapp.com/2.0/',\n\twithCredentials: true,\n})\n\nconst linkInRecoverEmailToLocal = 'http://localhost:3000/#/password/new/$token$'\nconst linkInRecoverEmailToGithubPages =\n\t'https://judgeby.github.io/cards-party/#/password/new/$token$'\n\nexport const authAPI = {\n\tgetMe() {\n\t\treturn instance.post('auth/me', {})\n\t},\n\tlogin(loginData: loginDataType) {\n\t\treturn instance.post('/auth/login', loginData)\n\t},\n\tlogout() {\n\t\treturn instance.delete('auth/me')\n\t},\n\tregister(email: string, password: string) {\n\t\treturn instance.post('/auth/register', { email, password })\n\t},\n\t//локальный бэк не поддерживает этот запрос - делать на хероку\n\tsendPasswordRecoveryRequest(email: string) {\n\t\treturn axios.post(\n\t\t\t'https://neko-back.herokuapp.com/2.0/auth/forgot',\n\t\t\t{\n\t\t\t\temail,\n\t\t\t\tfrom: 'Best of the best',\n\t\t\t\tmessage: `<div style='background-color: lime; padding: 15px'>password recovery link: <a href='${linkInRecoverEmailToGithubPages}$token$'>link</a></div>`,\n\t\t\t},\n\t\t\t{ withCredentials: true }\n\t\t)\n\t},\n\tsendNewPassword(password: string, resetPasswordToken: string) {\n\t\treturn instance.post('/auth/set-new-password', {\n\t\t\tpassword,\n\t\t\tresetPasswordToken,\n\t\t})\n\t},\n}\n","import { AppThunk } from './store'\r\n\r\nconst initialState = {\r\n\t_id: null as null | string,\r\n\tname: null as null | string,\r\n\temail: null as null | string,\r\n\tavatar: null as null | string,\r\n\tpublicCardPacksCount: null as null | number,\r\n\tverified: false,\r\n}\r\n\r\nexport const profileReducer = (\r\n\tstate: ProfileStateType = initialState,\r\n\taction: ProfileActionsType\r\n): ProfileStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'PROFILE/SET-PROFILE-DATA': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nexport const setProfile = (data: ProfileStateType) =>\r\n\t({ type: 'PROFILE/SET-PROFILE-DATA', payload: { ...data } } as const)\r\n// thunks\r\nexport const setProfileData =\r\n\t(data: ProfileStateType): AppThunk =>\r\n\tdispatch => {\r\n\t\tdispatch(setProfile(data))\r\n\t}\r\nexport const clearProfileData = (): AppThunk => dispatch => {\r\n\tdispatch(\r\n\t\tsetProfile({\r\n\t\t\t_id: null,\r\n\t\t\tname: null,\r\n\t\t\temail: null,\r\n\t\t\tavatar: null,\r\n\t\t\tpublicCardPacksCount: null,\r\n\t\t\tverified: false,\r\n\t\t})\r\n\t)\r\n}\r\n// types\r\nexport type SetProfile = ReturnType<typeof setProfile>\r\nexport type ProfileStateType = typeof initialState\r\nexport type ProfileActionsType = SetProfile\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\nimport { clearProfileData, setProfileData } from './profile-reducer'\r\n\r\nconst initialState = {\r\n\tisAuthorized: false,\r\n\terror: '',\r\n\tisLoading:false\r\n}\r\ntype InitialStateType = {\r\n\tisAuthorized: boolean\r\n\terror: string\r\n\tisLoading:boolean\r\n}\r\n\r\nexport const authReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: AuthActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'AUTH/LOGIN':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuthorized: action.isAuthorized,\r\n\t\t\t}\r\n\t\tcase 'AUTH/ERROR':\r\n\t\t\treturn { ...state, error: action.err }\r\n\t\tcase 'AUTH/IS-LOADING':\r\n\t\t\treturn {...state,isLoading:action.isLoading}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nconst Login = (isAuthorized: boolean) =>\r\n\t({ type: 'AUTH/LOGIN', isAuthorized } as const)\r\nconst setError = (err: string) => ({ type: 'AUTH/ERROR', err } as const)\r\nexport const setIsLoading = (isLoading:boolean) => ({type:'AUTH/IS-LOADING',isLoading}as const )\r\n\r\n// thunks\r\nexport const LoginTC =\r\n\t(loginData: loginDataType): AppThunk =>\r\n\tdispatch => {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tauthAPI\r\n\t\t\t.login(loginData)\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet data: dataType = {\r\n\t\t\t\t\t_id: res.data._id,\r\n\t\t\t\t\tavatar: res.data.avatar,\r\n\t\t\t\t\tname: res.data.name,\r\n\t\t\t\t\temail: res.data.email,\r\n\t\t\t\t\tpublicCardPacksCount: res.data.publicCardPacksCount,\r\n\t\t\t\t\tverified: res.data.verified,\r\n\t\t\t\t}\r\n\t\t\t\tdispatch(setProfileData(data))\r\n\t\t\t\tdispatch(Login(true))\r\n\t\t\t\tdispatch(setIsLoading(false))\r\n\t\t\t})\r\n\t\t\t.catch(e => {\r\n\t\t\t\tconst error = e.response\r\n\t\t\t\t\t? e.response.data.error\r\n\t\t\t\t\t: e.message + 'more details in console'\r\n\t\t\t\tdispatch(setError(error))\r\n\t\t\t\tdispatch(setIsLoading(false))\r\n\t\t\t})\r\n\t}\r\nexport const getMe = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tconst res = await authAPI.getMe()\r\n\t\tconst { _id, email, avatar, name, publicCardPacksCount, verified } =\r\n\t\t\tres.data\r\n\t\tdispatch(\r\n\t\t\tsetProfileData({\r\n\t\t\t\t_id,\r\n\t\t\t\temail,\r\n\t\t\t\tavatar,\r\n\t\t\t\tname,\r\n\t\t\t\tpublicCardPacksCount,\r\n\t\t\t\tverified,\r\n\t\t\t})\r\n\t\t)\r\n\t\tdispatch(Login(true))\r\n\t} catch (e: any) {}\r\n}\r\nexport const logout = (): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tawait authAPI.logout()\r\n\t\tdispatch(Login(false))\r\n\t\tdispatch(clearProfileData())\r\n\t\tdispatch(setIsLoading(false))\r\n\t} catch (e: any) {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\n// types\r\nexport type LoginAT = ReturnType<typeof Login>\r\nexport type setErrorAT = ReturnType<typeof setError>\r\nexport type setIsLoadingAT = ReturnType<typeof setIsLoading>\r\nexport type dataType = {\r\n\t_id: string\r\n\temail: string\r\n\tname: string\r\n\tavatar: string\r\n\tpublicCardPacksCount: number\r\n\tverified: boolean\r\n}\r\nexport type loginDataType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: boolean\r\n}\r\n\r\nexport type AuthActionsType = LoginAT | setErrorAT | setIsLoadingAT\r\n","export default __webpack_public_path__ + \"static/media/menu.e6378079.png\";","import React from 'react'\r\nimport styles from './Header.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../m2-bll/store'\r\nimport { logout } from '../../m2-bll/auth-reducer'\r\nimport menu from \"../../../Media/menu/menu.png\"\r\n\r\nconst Header = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\r\n\tconst logoutHandler = () => {\r\n\t\tdispatch(logout())\r\n\t}\r\n\treturn (\r\n\t\t<header className={styles.header}>\r\n\t\t\t<NavLink to={'/'} className={styles.link} activeClassName={styles.active}>Home</NavLink>\r\n\t\t\t{isAuthorized ? (\r\n\t\t\t\t<button onClick={logoutHandler}>Logout</button>\r\n\t\t\t) : (\r\n\t\t\t\t<NavLink to={'/login'} className={styles.link} activeClassName={styles.active}>Login</NavLink>\r\n\t\t\t)}\r\n\t\t\t<NavLink to={'/registration'} className={styles.link} activeClassName={styles.active}>Registration</NavLink>\r\n\t\t\t<NavLink to={'/profile'} className={styles.link} activeClassName={styles.active}>Profile</NavLink>\r\n\t\t\t<NavLink to={'/404'} className={styles.link} activeClassName={styles.active}>404</NavLink>\r\n\t\t\t<NavLink to={'/password/recovery'} className={styles.link} activeClassName={styles.active}>Password Recovery</NavLink>\r\n\t\t\t<NavLink to={'/password/new'} className={styles.link} activeClassName={styles.active}>New Password</NavLink>\r\n\t\t\t<NavLink to={'/test'} className={styles.link} activeClassName={styles.active}>Test</NavLink>\r\n\t\t\t<div><img src={menu} className={styles.block} alt={menu}/></div>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport s from './Auth.module.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMe, loginDataType, LoginTC } from '../../n1-main/m2-bll/auth-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\n\r\nconst Auth = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\tconst error = useSelector<AppRootStateType, string>(\r\n\t\tstate => state.auth.error\r\n\t)\r\n\tconst isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\tconst [email, setEmail] = useState('')\r\n\r\n\tconst onEmailChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetEmail(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tconst onPasswordChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst [rememberMe, setRememberMe] = useState(false)\r\n\r\n\tconst onRememberMeChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetRememberMe(e.currentTarget.checked)\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isAuthorized) {\r\n\t\t\tdispatch(getMe())\r\n\t\t}\r\n\t}, [isAuthorized])\r\n\r\n\tconst Login = () => {\r\n\t\tconst loginData: loginDataType = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\trememberMe\r\n\t\t}\r\n\t\tdispatch(LoginTC(loginData))\r\n\t}\r\n\r\n\tif (isAuthorized) {\r\n\t\treturn <Redirect to={'/profile'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={Login} className={s.authPageContainer}>\r\n\t\t\t<div className={s.login}>\r\n\t\t\t\t<h3>Login</h3>\r\n\t\t\t\t{error ? error : ''}\r\n\t\t\t\t<div className={s.emailPasswordLoginContainer}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={s.email}\r\n\t\t\t\t\t\tonChange={onEmailChangeHandler}\r\n\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName={s.password}\r\n\t\t\t\t\t\tonChange={onPasswordChangeHandler}\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<label className={s.label}>\r\n\t\t\t\t\t\t<input className={s.checkbox} onChange={onRememberMeChangeHandler} type='checkbox' />\r\n\t\t\t\t\t\t<div className={s.rememberMe}>Remember Me</div>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div className={s.recoveryContainer}>\r\n\t\t\t\t\t\t<NavLink className={s.recovery} to={'/password/recovery'}>Forgot password</NavLink>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={s.loginButtonContainer}>\r\n\t\t\t\t\t<button className={s.loginButton} disabled={isLoading ? true : false} type='submit'>Login</button>\r\n\r\n\t\t\t\t\t<div className={s.signUpContainer}>\r\n\t\t\t\t\t\t<div className={s.account}>Don't have an account</div>\r\n\t\t\t\t\t\t<div className={s.SignUpContainer}>\r\n\t\t\t\t\t\t\t<NavLink className={s.SignUp} to={'/registration'}> Sign Up</NavLink>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Auth\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\nimport { setIsLoading } from './auth-reducer'\r\n\r\nconst initialState = {\r\n\tisRegistered: false,\r\n\terror: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: RegistrationActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'REGISTRATION/ERROR':\r\n\t\t\treturn { ...state, error: action.error }\r\n\t\tcase 'REGISTRATION/REGISTER':\r\n\t\t\treturn { ...state, isRegistered: action.isRegistered }\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nexport const setError = (error: string | null) => ({ type: 'REGISTRATION/ERROR', error } as const)\r\nconst register = (isRegistered: boolean) => ({ type: 'REGISTRATION/REGISTER', isRegistered } as const)\r\n// thunks\r\nexport const registerTC = (email: string, password: string): AppThunk => async dispatch => {\r\n\ttry {\r\n\t\tdispatch(setIsLoading(true))\r\n\t\tdispatch(setError(null))\r\n\t\tawait authAPI.register(email, password)\r\n\t\tdispatch(register(true))\r\n\t} catch (e: any) {\r\n\t\tif (e.response) {\r\n\t\t\tdispatch(setError(e.response.data.error))\r\n\t\t} else {\r\n\t\t\tdispatch(setError(e.message))\r\n\t\t}\r\n\t} finally {\r\n\t\tdispatch(setIsLoading(false))\r\n\t}\r\n}\r\n// types\r\n\r\nexport type RegistrationActionsType = ReturnType<typeof setError> | ReturnType<typeof register>\r\n","import s from './Loader.module.css'\r\nimport React from 'react'\r\n\r\nconst Loader = () => {\r\n\treturn <div className={s.ldsEllipsis}>\r\n\t\t<div />\r\n\t\t<div />\r\n\t\t<div />\r\n\t\t<div />\r\n\t</div>\r\n}\r\n\r\nexport default Loader","import React, { ChangeEvent, FormEvent, useState } from 'react'\r\nimport SuperInputText from '../../n1-main/m1-ui/common/SuperInputText/SuperInputText'\r\nimport SuperButton from '../../n1-main/m1-ui/common/SuperButton/SuperButton'\r\nimport s from './Registration.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { registerTC, setError } from '../../n1-main/m2-bll/registration-reducer'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport Loader from '../../n1-main/m1-ui/common/Loader/Loader'\r\n\r\nconst Registration = () => {\r\n\tconst [login, setLogin] = useState<string>('')\r\n\tconst [password, setPassword] = useState<string>('')\r\n\tconst [checkPassword, setCheckPassword] = useState<string>('')\r\n\r\n\tconst isRegistered = useSelector<AppRootStateType, boolean>(state => state.registration.isRegistered)\r\n\tconst error = useSelector<AppRootStateType, null | string>(state => state.registration.error)\r\n\tconst isLoading = useSelector<AppRootStateType, boolean>(state => state.auth.isLoading)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetPassword(e.currentTarget.value)\r\n\t}\r\n\tconst onChangeCheckPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetCheckPassword(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst abortRegistration = () => {\r\n\t\tsetLogin('')\r\n\t\tsetPassword('')\r\n\t\tsetCheckPassword('')\r\n\t\tdispatch(setError(null))\r\n\t}\r\n\r\n\tconst handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault()\r\n\t\tif (password === checkPassword) {\r\n\t\t\tdispatch(registerTC(login, password))\r\n\t\t} else {\r\n\t\t\tdispatch(setError('passwords must match'))\r\n\t\t}\r\n\t}\r\n\r\n\tif (isRegistered) {\r\n\t\treturn <Redirect to='/login' />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<div className={s.registrationContainer}>\r\n\t\t\t\t<h4>Sign Up</h4>\r\n\t\t\t\t<div className={s.inputFields}>\r\n\t\t\t\t\t<SuperInputText placeholder='email' value={login}\r\n\t\t\t\t\t\t\t\t\t\t onChangeText={setLogin} />\r\n\t\t\t\t\t<input type='password' placeholder='password' value={password}\r\n\t\t\t\t\t\t\t onChange={onChangePassword} />\r\n\t\t\t\t\t<input type='password' placeholder='confirm password'\r\n\t\t\t\t\t\t\t value={checkPassword}\r\n\t\t\t\t\t\t\t onChange={onChangeCheckPassword} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.button}>\r\n\t\t\t\t\t<SuperButton className={s.btnCancelRegister} type='button' onClick={abortRegistration}>Cancel</SuperButton>\r\n\t\t\t\t\t<SuperButton disabled={isLoading} className={s.btnCancelRegister} type='submit'>Register</SuperButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t{error && <div className={s.err}>{error}</div>}\r\n\t\t\t\t{isLoading && <Loader />}\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Registration\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n\tProfileStateType,\r\n\tsetProfileData,\r\n} from '../../n1-main/m2-bll/profile-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport styles from './Profile.module.css'\r\nimport { authAPI } from '../../n1-main/m3-dal/api'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n\tconst { _id, name, email, avatar, publicCardPacksCount, verified } =\r\n\t\tuseSelector<AppRootStateType, ProfileStateType>(state => state.profile)\r\n\tconst isAuthorized = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.auth.isAuthorized\r\n\t)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isAuthorized) {\r\n\t\t\tdispatch(\r\n\t\t\t\tsetProfileData({\r\n\t\t\t\t\t_id: '1234',\r\n\t\t\t\t\tname: 'Vasya',\r\n\t\t\t\t\tavatar:\r\n\t\t\t\t\t\t'https://fiverr-res.cloudinary.com/images/t_main1,q_auto,f_auto,q_auto,f_auto/gigs/111554483/original/83d513acbc4b3716c9a474086bb633a5de3c2d74/create-social-media-avatars-in-minimalist-style.jpg',\r\n\t\t\t\t\temail: '1234@gmail.com',\r\n\t\t\t\t\tpublicCardPacksCount: 10,\r\n\t\t\t\t\tverified: true,\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t}\r\n\t}, [_id, dispatch])\r\n\r\n\tif (!isAuthorized) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div\r\n\t\t\t\tclassName={styles.avatar}\r\n\t\t\t\tstyle={{ background: `url(${avatar}) no-repeat center` }}\r\n\t\t\t/>\r\n\t\t\t<div>{name}</div>\r\n\t\t\t<div>{`email: ${email}`}</div>\r\n\t\t\t<div>{`Количество колод: ${publicCardPacksCount}`}</div>\r\n\t\t\t<div>{`Почта подтверждена: ${verified ? 'Да' : 'Нет'}`}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\n\nconst Error404 = () => {\n\treturn <div>404</div>\n}\n\nexport default Error404\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\n\r\nconst initialState = {\r\n\trecoveryError: null as null | string,\r\n\trecoverySendSuccess: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoveryReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: PasswordRecoveryActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'PASSWORD-RECOVERY/SET-RECOVERY-ERROR': {\r\n\t\t\treturn { ...state, recoveryError: action.recoveryError }\r\n\t\t}\r\n\t\tcase 'PASSWORD-RECOVERY/SET-RECOVERY-SEND-SUCCESS': {\r\n\t\t\treturn { ...state, recoverySendSuccess: action.recoverySendSuccess }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nconst setRecoveryError = (recoveryError: null | string) =>\r\n\t({ type: 'PASSWORD-RECOVERY/SET-RECOVERY-ERROR', recoveryError } as const)\r\nconst setRecoverySendSuccess = (recoverySendSuccess: boolean) =>\r\n\t({\r\n\t\ttype: 'PASSWORD-RECOVERY/SET-RECOVERY-SEND-SUCCESS',\r\n\t\trecoverySendSuccess,\r\n\t} as const)\r\n// thunks\r\n\r\nexport const sendPasswordRecovery =\r\n\t(email: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait authAPI.sendPasswordRecoveryRequest(email)\r\n\t\t\tdispatch(setRecoveryError(null))\r\n\t\t\tdispatch(setRecoverySendSuccess(true))\r\n\t\t} catch (e: any) {\r\n\t\t\tdispatch(setRecoveryError(e.response.data.error))\r\n\t\t\tdispatch(setRecoverySendSuccess(false))\r\n\t\t}\r\n\t}\r\n// types\r\n\r\nexport type PasswordRecoveryActionsType =\r\n\t| ReturnType<typeof setRecoveryError>\r\n\t| ReturnType<typeof setRecoverySendSuccess>\r\n","import React, { ChangeEvent, useState, KeyboardEvent } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sendPasswordRecovery } from '../../n1-main/m2-bll/passwordRecovery-reducer'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport s from './PasswordRecovery.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst PasswordRecovery = () => {\r\n\tconst recoveryError = useSelector<AppRootStateType, null | string>(\r\n\t\tstate => state.passwordRecovery.recoveryError\r\n\t)\r\n\tconst recoverySendSuccess = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.passwordRecovery.recoverySendSuccess\r\n\t)\r\n\tconst dispatch = useDispatch()\r\n\tconst [inputValue, setInputValue] = useState('')\r\n\r\n\tconst onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\tconst onPressEnterInputHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e && e.key === 'Enter') {\r\n\t\t\tdispatch(sendPasswordRecovery(inputValue))\r\n\t\t}\r\n\t}\r\n\tconst onClickButtonHandler = () => {\r\n\t\tdispatch(sendPasswordRecovery(inputValue))\r\n\t}\r\n\r\n\tif (recoverySendSuccess) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\tA link to restore your password was sent to the specified email\r\n\t\t\t\taddress\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<div className={s.passwordRecoveryContainer}>\r\n\t\t\t<h4>Forgot your password?</h4>\r\n\t\t\t<div className={s.inputField}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={onChangeInputHandler}\r\n\t\t\t\t\tonKeyDown={onPressEnterInputHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<p>Enter your email address and we will send you further instructions</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.positionBtn}>\r\n\t\t\t<button className={s.sendButton} onClick={onClickButtonHandler}>Send</button>\r\n\t\t\t{recoveryError && <div style={{ color: 'red' }}>{recoveryError}</div>}\r\n\r\n\t\t\t<p>If you remember your password</p>\r\n\t\t\t<NavLink to=\"/login\" className={s.footerBtn}>Try again</NavLink>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PasswordRecovery\r\n","import { AppThunk } from './store'\r\nimport { authAPI } from '../m3-dal/api'\r\n\r\nconst initialState = {\r\n\tnewPasswordSendingSuccess: false,\r\n\tnewPasswordSendingError: null as null | string,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (\r\n\tstate: InitialStateType = initialState,\r\n\taction: NewPasswordActionsType\r\n): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-SUCCESS':\r\n\t\tcase 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-ERROR': {\r\n\t\t\treturn { ...state, ...action.payload }\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n// actions\r\nconst setNewPasswordSendingSuccess = (newPasswordSendingSuccess: boolean) =>\r\n\t({\r\n\t\ttype: 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-SUCCESS',\r\n\t\tpayload: { newPasswordSendingSuccess },\r\n\t} as const)\r\nconst setNewPasswordSendingError = (newPasswordSendingError: null | string) =>\r\n\t({\r\n\t\ttype: 'NEW-PASSWORD/SET-NEW-PASSWORD-SENDING-ERROR',\r\n\t\tpayload: { newPasswordSendingError },\r\n\t} as const)\r\n\r\n// thunks\r\nexport const sendNewPassword =\r\n\t(password: string, resetPasswordToken: string): AppThunk =>\r\n\tasync dispatch => {\r\n\t\ttry {\r\n\t\t\tawait authAPI.sendNewPassword(password, resetPasswordToken)\r\n\t\t\tdispatch(setNewPasswordSendingSuccess(true))\r\n\t\t\tdispatch(setNewPasswordSendingError(null))\r\n\t\t} catch (e: any) {\r\n\t\t\tif (e.response) {\r\n\t\t\t\tdispatch(setNewPasswordSendingError(e.response.data.error))\r\n\t\t\t} else {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\tsetNewPasswordSendingError(\r\n\t\t\t\t\t\t'Something went wrong. Try again later.'\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tdispatch(setNewPasswordSendingSuccess(false))\r\n\t\t}\r\n\t}\r\n\r\n// types\r\nexport type NewPasswordActionsType =\r\n\t| ReturnType<typeof setNewPasswordSendingSuccess>\r\n\t| ReturnType<typeof setNewPasswordSendingError>\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink, Redirect, useParams } from 'react-router-dom'\r\nimport { AppRootStateType } from '../../n1-main/m2-bll/store'\r\nimport { sendNewPassword } from '../../n1-main/m2-bll/newPassword-reducer'\r\n\r\nconst NewPassword = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst newPasswordSendingSuccess = useSelector<AppRootStateType, boolean>(\r\n\t\tstate => state.newPassword.newPasswordSendingSuccess\r\n\t)\r\n\tconst newPasswordSendingError = useSelector<AppRootStateType, null | string>(\r\n\t\tstate => state.newPassword.newPasswordSendingError\r\n\t)\r\n\tconst [newPasswordValue, setNewPasswordValue] = useState('')\r\n\tconst [confirmPasswordValue, setConfirmPasswordValue] = useState('')\r\n\tconst [isPasswordsMatch, setIsPasswordsMatch] = useState(true)\r\n\tconst [isPasswordValid, setIsPasswordValid] = useState<boolean | null>(null)\r\n\t//токен из URL. Если нет, то undefined\r\n\tconst { token } = useParams<{ token: string }>()\r\n\r\n\t//проверка совпадения паролей\r\n\tconst checkIsPasswordsMatch = (\r\n\t\tnewPassword: string,\r\n\t\tconfirmPassword: string\r\n\t) => {\r\n\t\tsetIsPasswordsMatch(newPassword === confirmPassword)\r\n\t}\r\n\r\n\t//валидация 6 символов и больше\r\n\tconst checkIsPasswordsValid = (newPassword: string) => {\r\n\t\tsetIsPasswordValid(newPassword.length >= 8)\r\n\t}\r\n\r\n\tconst onChangeInputHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\te.target.name === 'newPassword' && setNewPasswordValue(e.target.value)\r\n\t\te.target.name === 'confirmPassword' &&\r\n\t\t\tsetConfirmPasswordValue(e.target.value)\r\n\t}\r\n\r\n\tconst sendNewPasswordHandler = () => {\r\n\t\ttoken &&\r\n\t\t\tisPasswordValid &&\r\n\t\t\tisPasswordsMatch &&\r\n\t\t\tdispatch(sendNewPassword(confirmPasswordValue, token))\r\n\t}\r\n\r\n\tif (newPasswordSendingSuccess) {\r\n\t\treturn <Redirect to={'/login'} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>NewPassword</div>\r\n\t\t\t{/*если нет токена, то направляем юзера на страницу рекавери*/}\r\n\t\t\t{!token && (\r\n\t\t\t\t<div>\r\n\t\t\t\t\tYou mast to request recovery link to your email{' '}\r\n\t\t\t\t\t<NavLink to={'/password/recovery'}>Recover Password</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div>\r\n\t\t\t\t<span>Enter new password</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname={'newPassword'}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={newPasswordValue}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tonChangeInputHandler(e)\r\n\t\t\t\t\t\tcheckIsPasswordsValid(e.target.value)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{isPasswordValid !== null && !isPasswordValid && (\r\n\t\t\t\t\t<div style={{ color: 'red' }}>\r\n\t\t\t\t\t\tPassword must be more then 7 character\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>Confirm new password</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\tname={'confirmPassword'}\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvalue={confirmPasswordValue}\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tonChangeInputHandler(e)\r\n\t\t\t\t\t\tcheckIsPasswordsMatch(newPasswordValue, e.target.value)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t\t{!isPasswordsMatch && (\r\n\t\t\t\t\t<div style={{ color: 'red' }}>Passwords must match</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={sendNewPasswordHandler}>Send New password</button>\r\n\t\t\t</div>\r\n\t\t\t{newPasswordSendingError && (\r\n\t\t\t\t<div style={{ color: 'red' }}>{newPasswordSendingError}</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport styles from './App.module.css'\r\nimport Test from '../../../n2-features/f0-test/Test'\r\nimport Header from '../header/Header'\r\nimport Auth from '../../../n2-features/f1-auth/Auth'\r\nimport Registration from '../../../n2-features/f2-registration/Registration'\r\nimport Profile from '../../../n2-features/f3-profile/Profile'\r\nimport Error404 from '../../../n2-features/f6-404/Error404'\r\nimport PasswordRecovery from '../../../n2-features/f4-passwordRecovery/PasswordRecovery'\r\nimport NewPassword from '../../../n2-features/f5-newPassword/NewPassword'\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header />\r\n\t\t\t<div className={styles.container}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path={'/'} render={() => <div>Home</div>} />\r\n\t\t\t\t\t<Route exact path={'/login'} render={() => <Auth />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/registration'}\r\n\t\t\t\t\t\trender={() => <Registration />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path={'/profile'} render={() => <Profile />} />\r\n\t\t\t\t\t<Route exact path={'/404'} render={() => <Error404 />} />\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/password/recovery'}\r\n\t\t\t\t\t\trender={() => <PasswordRecovery />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t\tpath={'/password/new/:token?'}\r\n\t\t\t\t\t\trender={() => <NewPassword />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route exact path={'/test'} render={() => <Test />} />\r\n\t\t\t\t\t<Redirect from={'*'} to={'/404'} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport {\n\tNewPasswordActionsType,\n\tnewPasswordReducer,\n} from './newPassword-reducer'\nimport {\n\tRegistrationActionsType,\n\tregistrationReducer,\n} from './registration-reducer'\nimport { AuthActionsType, authReducer } from './auth-reducer'\nimport { ProfileActionsType, profileReducer } from './profile-reducer'\nimport {\n\tPasswordRecoveryActionsType,\n\tpasswordRecoveryReducer,\n} from './passwordRecovery-reducer'\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tnewPassword: newPasswordReducer,\n\tregistration: registrationReducer,\n\tprofile: profileReducer,\n\tpasswordRecovery: passwordRecoveryReducer,\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n// чтобы можно было в консоли браузера обращаться к store в любой момент\n// @ts-ignore\nwindow.store = store\n\n//types\n//тип всего стейта\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n//тип всех экшенов из всех редьюсеров\nexport type AppRootActionsType =\n\t| NewPasswordActionsType\n\t| AuthActionsType\n\t| RegistrationActionsType\n\t| ProfileActionsType\n\t| PasswordRecoveryActionsType\n//общий тип для всех санок\nexport type AppThunk<ReturnType = void> = ThunkAction<\n\tReturnType,\n\tAppRootStateType,\n\tunknown,\n\tAppRootActionsType\n>\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './n1-main/m1-ui/App/App'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { store } from './n1-main/m2-bll/store'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t<Provider store={store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPageContainer\":\"Auth_authPageContainer__JMl6s\",\"emailPasswordLoginContainer\":\"Auth_emailPasswordLoginContainer__3HfAd\",\"label\":\"Auth_label__1nNWk\",\"checkbox\":\"Auth_checkbox__su0et\",\"recoveryContainer\":\"Auth_recoveryContainer__3OVyI\",\"rememberMe\":\"Auth_rememberMe__3w_MW\",\"loginButtonContainer\":\"Auth_loginButtonContainer__2JHPn\",\"loginButton\":\"Auth_loginButton__ME2LV\",\"account\":\"Auth_account__35u_k\"};"],"sourceRoot":""}